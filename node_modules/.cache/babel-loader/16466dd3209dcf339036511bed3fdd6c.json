{"ast":null,"code":"import { createForOfIteratorHelperLoose as _createForOfIteratorHelperLoose } from '../_virtual/_rollupPluginBabelHelpers.js';\nfunction disposables() {\n  var disposables = [];\n  var api = {\n    requestAnimationFrame: function (_requestAnimationFrame) {\n      function requestAnimationFrame() {\n        return _requestAnimationFrame.apply(this, arguments);\n      }\n      requestAnimationFrame.toString = function () {\n        return _requestAnimationFrame.toString();\n      };\n      return requestAnimationFrame;\n    }(function () {\n      var raf = requestAnimationFrame.apply(void 0, arguments);\n      api.add(function () {\n        return cancelAnimationFrame(raf);\n      });\n    }),\n    nextFrame: function nextFrame() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      api.requestAnimationFrame(function () {\n        api.requestAnimationFrame.apply(api, args);\n      });\n    },\n    setTimeout: function (_setTimeout) {\n      function setTimeout() {\n        return _setTimeout.apply(this, arguments);\n      }\n      setTimeout.toString = function () {\n        return _setTimeout.toString();\n      };\n      return setTimeout;\n    }(function () {\n      var timer = setTimeout.apply(void 0, arguments);\n      api.add(function () {\n        return clearTimeout(timer);\n      });\n    }),\n    add: function add(cb) {\n      disposables.push(cb);\n    },\n    dispose: function dispose() {\n      for (var _iterator = _createForOfIteratorHelperLoose(disposables.splice(0)), _step; !(_step = _iterator()).done;) {\n        var dispose = _step.value;\n        dispose();\n      }\n    }\n  };\n  return api;\n}\nexport { disposables };","map":{"version":3,"sources":["/Users/prince.kumar/Documents/Niyo-Dev/Games/travel-wordle/truddle/node_modules/@headlessui/react/src/utils/disposables.ts"],"names":["disposables","api","requestAnimationFrame","raf","add","cancelAnimationFrame","nextFrame","args","setTimeout","timer","clearTimeout","cb","push","dispose","splice"],"mappings":";SAAgBA,WAAAA,CAAAA,EAAAA;EACd,IAAIA,WAAW,GAAe,EAA9B;EAEA,IAAIC,GAAG,GAAG;IACRC,qBADQ,EAAA,UAAA,sBAAA,EAAA;MAAA,SAAA,qBAAA,CAAA,EAAA;QAAA,OAAA,sBAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA;MAAA;MAAA,qBAAA,CAAA,QAAA,GAAA,YAAA;QAAA,OAAA,sBAAA,CAAA,QAAA,CAAA,CAAA;MAAA,CAAA;MAAA,OAAA,qBAAA;IAAA,CAAA,CAAA,YAAA;MAEN,IAAIC,GAAG,GAAGD,qBAAqB,CAAA,KAArBA,CAAAA,KAAAA,CAAAA,EAAAA,SAAAA,CAAV;MACAD,GAAG,CAACG,GAAJH,CAAQ,YAAA;QAAA,OAAMI,oBAAoB,CAACF,GAAD,CAA1B;MAAA,CAARF,CAAAA;IACD,CAJO,CAAA;IAMRK,SANQ,EAAA,SAAA,SAAA,CAAA,EAAA;wCAMKC,IAAAA,GAAAA,IAAAA,KAAAA,CAAAA,IAAAA,CAAAA,EAAAA,IAAAA,GAAAA,CAAAA,EAAAA,IAAAA,GAAAA,IAAAA,EAAAA,IAAAA,EAAAA,EAAAA;QAAAA,IAAAA,CAAAA,IAAAA,CAAAA,GAAAA,SAAAA,CAAAA,IAAAA,CAAAA;;MACXN,GAAG,CAACC,qBAAJD,CAA0B,YAAA;QACxBA,GAAG,CAACC,qBAAJD,CAAAA,KAAAA,CAAAA,GAAG,EAA0BM,IAA1B,CAAHN;MACD,CAFDA,CAAAA;IAGD,CAVO;IAYRO,UAZQ,EAAA,UAAA,WAAA,EAAA;MAAA,SAAA,UAAA,CAAA,EAAA;QAAA,OAAA,WAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA;MAAA;MAAA,UAAA,CAAA,QAAA,GAAA,YAAA;QAAA,OAAA,WAAA,CAAA,QAAA,CAAA,CAAA;MAAA,CAAA;MAAA,OAAA,UAAA;IAAA,CAAA,CAAA,YAAA;MAaN,IAAIC,KAAK,GAAGD,UAAU,CAAA,KAAVA,CAAAA,KAAAA,CAAAA,EAAAA,SAAAA,CAAZ;MACAP,GAAG,CAACG,GAAJH,CAAQ,YAAA;QAAA,OAAMS,YAAY,CAACD,KAAD,CAAlB;MAAA,CAARR,CAAAA;IACD,CAfO,CAAA;IAiBRG,GAjBQ,EAAA,SAAA,GAAA,CAiBJO,EAjBI,EAAA;MAkBNX,WAAW,CAACY,IAAZZ,CAAiBW,EAAjBX,CAAAA;IACD,CAnBO;IAqBRa,OArBQ,EAAA,SAAA,OAAA,CAAA,EAAA;MAsBN,KAAA,IAAA,SAAA,GAAA,+BAAA,CAAoBb,WAAW,CAACc,MAAZd,CAAmB,CAAnBA,CAApB,CAAA,EAAA,KAAA,EAAA,CAAA,CAAA,KAAA,GAAA,SAAA,CAAA,CAAA,EAAA,IAAA,GAA2C;QAAA,IAAlCa,OAAkC,GAAA,KAAA,CAAA,KAAA;QACzCA,OAAO,CAAA,CAAA;MACR;IACF;EAzBO,CAAV;EA4BA,OAAOZ,GAAP;AACD","sourcesContent":["export function disposables() {\n  let disposables: Function[] = []\n\n  let api = {\n    requestAnimationFrame(...args: Parameters<typeof requestAnimationFrame>) {\n      let raf = requestAnimationFrame(...args)\n      api.add(() => cancelAnimationFrame(raf))\n    },\n\n    nextFrame(...args: Parameters<typeof requestAnimationFrame>) {\n      api.requestAnimationFrame(() => {\n        api.requestAnimationFrame(...args)\n      })\n    },\n\n    setTimeout(...args: Parameters<typeof setTimeout>) {\n      let timer = setTimeout(...args)\n      api.add(() => clearTimeout(timer))\n    },\n\n    add(cb: () => void) {\n      disposables.push(cb)\n    },\n\n    dispose() {\n      for (let dispose of disposables.splice(0)) {\n        dispose()\n      }\n    },\n  }\n\n  return api\n}\n"]},"metadata":{},"sourceType":"module"}