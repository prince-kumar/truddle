{"ast":null,"code":"import React, { useContext, createContext } from 'react';\nvar Context = /*#__PURE__*/createContext(null);\nContext.displayName = 'OpenClosedContext';\nvar State;\n(function (State) {\n  State[State[\"Open\"] = 0] = \"Open\";\n  State[State[\"Closed\"] = 1] = \"Closed\";\n})(State || (State = {}));\nfunction useOpenClosed() {\n  return useContext(Context);\n}\nfunction OpenClosedProvider(_ref) {\n  var value = _ref.value,\n    children = _ref.children;\n  return React.createElement(Context.Provider, {\n    value: value\n  }, children);\n}\nexport { OpenClosedProvider, State, useOpenClosed };","map":{"version":3,"sources":["/Users/prince.kumar/Documents/Niyo-Dev/Games/travel-wordle/word-master/node_modules/@headlessui/react/src/internal/open-closed.tsx"],"names":["Context","createContext","displayName","State","useOpenClosed","useContext","OpenClosedProvider","value","children","Provider"],"mappings":";AASA,IAAIA,OAAO,GAAA,aAAGC,aAAa,CAAe,IAAf,CAA3B;AACAD,OAAO,CAACE,WAARF,GAAsB,mBAAtBA;IAEYG,KAAAA;AAAZ,CAAA,UAAYA,KAAAA,EAAAA;EACVA,KAAAA,CAAAA,KAAAA,CAAAA,MAAAA,CAAAA,GAAAA,CAAAA,CAAAA,GAAAA,MAAAA;EACAA,KAAAA,CAAAA,KAAAA,CAAAA,QAAAA,CAAAA,GAAAA,CAAAA,CAAAA,GAAAA,QAAAA;AACD,CAHD,EAAYA,KAAK,KAALA,KAAK,GAAA,CAAA,CAAA,CAAjB,CAAA;SAKgBC,aAAAA,CAAAA,EAAAA;EACd,OAAOC,UAAU,CAACL,OAAD,CAAjB;AACD;SAOeM,kBAAAA,CAAAA,IAAAA,EAAAA;MAAqBC,KAAAA,GAAAA,IAAAA,CAAAA,KAAAA;IAAOC,QAAAA,GAAAA,IAAAA,CAAAA,QAAAA;EAC1C,OAAO,KAAA,CAAA,aAAA,CAACR,OAAO,CAACS,QAAT,EAAA;IAAkBF,KAAK,EAAEA;GAAzB,EAAiCC,QAAjC,CAAP;AACD","sourcesContent":["import React, {\n  createContext,\n  useContext,\n\n  // Types\n  ReactNode,\n  ReactElement,\n} from 'react'\n\nlet Context = createContext<State | null>(null)\nContext.displayName = 'OpenClosedContext'\n\nexport enum State {\n  Open,\n  Closed,\n}\n\nexport function useOpenClosed() {\n  return useContext(Context)\n}\n\ninterface Props {\n  value: State\n  children: ReactNode\n}\n\nexport function OpenClosedProvider({ value, children }: Props): ReactElement {\n  return <Context.Provider value={value}>{children}</Context.Provider>\n}\n"]},"metadata":{},"sourceType":"module"}