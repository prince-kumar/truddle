{"ast":null,"code":"import { extends as _extends, objectWithoutPropertiesLoose as _objectWithoutPropertiesLoose } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport React, { useReducer, createRef, useMemo, createContext, useCallback, useRef, useContext, Fragment } from 'react';\nimport { match } from '../../utils/match.esm.js';\nimport { render, forwardRefWithAs, Features } from '../../utils/render.esm.js';\nimport { useSyncRefs } from '../../hooks/use-sync-refs.esm.js';\nimport { Keys } from '../keyboard.esm.js';\nimport { isDisabledReactIssue7711 } from '../../utils/bugs.esm.js';\nimport { useIsoMorphicEffect } from '../../hooks/use-iso-morphic-effect.esm.js';\nimport { useId } from '../../hooks/use-id.esm.js';\nimport { isFocusableElement, FocusableMode } from '../../utils/focus-management.esm.js';\nimport { useWindowEvent } from '../../hooks/use-window-event.esm.js';\nimport { OpenClosedProvider, State, useOpenClosed } from '../../internal/open-closed.esm.js';\nimport { useResolveButtonType } from '../../hooks/use-resolve-button-type.esm.js';\nimport { disposables } from '../../utils/disposables.esm.js';\nimport { useDisposables } from '../../hooks/use-disposables.esm.js';\nimport { useComputed } from '../../hooks/use-computed.esm.js';\nimport { calculateActiveIndex, Focus } from '../../utils/calculate-active-index.esm.js';\nvar _reducers;\nvar ListboxStates;\n(function (ListboxStates) {\n  ListboxStates[ListboxStates[\"Open\"] = 0] = \"Open\";\n  ListboxStates[ListboxStates[\"Closed\"] = 1] = \"Closed\";\n})(ListboxStates || (ListboxStates = {}));\nvar ActionTypes;\n(function (ActionTypes) {\n  ActionTypes[ActionTypes[\"OpenListbox\"] = 0] = \"OpenListbox\";\n  ActionTypes[ActionTypes[\"CloseListbox\"] = 1] = \"CloseListbox\";\n  ActionTypes[ActionTypes[\"SetDisabled\"] = 2] = \"SetDisabled\";\n  ActionTypes[ActionTypes[\"SetOrientation\"] = 3] = \"SetOrientation\";\n  ActionTypes[ActionTypes[\"GoToOption\"] = 4] = \"GoToOption\";\n  ActionTypes[ActionTypes[\"Search\"] = 5] = \"Search\";\n  ActionTypes[ActionTypes[\"ClearSearch\"] = 6] = \"ClearSearch\";\n  ActionTypes[ActionTypes[\"RegisterOption\"] = 7] = \"RegisterOption\";\n  ActionTypes[ActionTypes[\"UnregisterOption\"] = 8] = \"UnregisterOption\";\n})(ActionTypes || (ActionTypes = {}));\nvar reducers = (_reducers = {}, _reducers[ActionTypes.CloseListbox] = function (state) {\n  if (state.disabled) return state;\n  if (state.listboxState === ListboxStates.Closed) return state;\n  return _extends({}, state, {\n    activeOptionIndex: null,\n    listboxState: ListboxStates.Closed\n  });\n}, _reducers[ActionTypes.OpenListbox] = function (state) {\n  if (state.disabled) return state;\n  if (state.listboxState === ListboxStates.Open) return state;\n  return _extends({}, state, {\n    listboxState: ListboxStates.Open\n  });\n}, _reducers[ActionTypes.SetDisabled] = function (state, action) {\n  if (state.disabled === action.disabled) return state;\n  return _extends({}, state, {\n    disabled: action.disabled\n  });\n}, _reducers[ActionTypes.SetOrientation] = function (state, action) {\n  if (state.orientation === action.orientation) return state;\n  return _extends({}, state, {\n    orientation: action.orientation\n  });\n}, _reducers[ActionTypes.GoToOption] = function (state, action) {\n  if (state.disabled) return state;\n  if (state.listboxState === ListboxStates.Closed) return state;\n  var activeOptionIndex = calculateActiveIndex(action, {\n    resolveItems: function resolveItems() {\n      return state.options;\n    },\n    resolveActiveIndex: function resolveActiveIndex() {\n      return state.activeOptionIndex;\n    },\n    resolveId: function resolveId(item) {\n      return item.id;\n    },\n    resolveDisabled: function resolveDisabled(item) {\n      return item.dataRef.current.disabled;\n    }\n  });\n  if (state.searchQuery === '' && state.activeOptionIndex === activeOptionIndex) return state;\n  return _extends({}, state, {\n    searchQuery: '',\n    activeOptionIndex: activeOptionIndex\n  });\n}, _reducers[ActionTypes.Search] = function (state, action) {\n  if (state.disabled) return state;\n  if (state.listboxState === ListboxStates.Closed) return state;\n  var searchQuery = state.searchQuery + action.value.toLowerCase();\n  var match = state.options.findIndex(function (option) {\n    var _option$dataRef$curre;\n    return !option.dataRef.current.disabled && ((_option$dataRef$curre = option.dataRef.current.textValue) == null ? void 0 : _option$dataRef$curre.startsWith(searchQuery));\n  });\n  if (match === -1 || match === state.activeOptionIndex) return _extends({}, state, {\n    searchQuery: searchQuery\n  });\n  return _extends({}, state, {\n    searchQuery: searchQuery,\n    activeOptionIndex: match\n  });\n}, _reducers[ActionTypes.ClearSearch] = function (state) {\n  if (state.disabled) return state;\n  if (state.listboxState === ListboxStates.Closed) return state;\n  if (state.searchQuery === '') return state;\n  return _extends({}, state, {\n    searchQuery: ''\n  });\n}, _reducers[ActionTypes.RegisterOption] = function (state, action) {\n  return _extends({}, state, {\n    options: [].concat(state.options, [{\n      id: action.id,\n      dataRef: action.dataRef\n    }])\n  });\n}, _reducers[ActionTypes.UnregisterOption] = function (state, action) {\n  var nextOptions = state.options.slice();\n  var currentActiveOption = state.activeOptionIndex !== null ? nextOptions[state.activeOptionIndex] : null;\n  var idx = nextOptions.findIndex(function (a) {\n    return a.id === action.id;\n  });\n  if (idx !== -1) nextOptions.splice(idx, 1);\n  return _extends({}, state, {\n    options: nextOptions,\n    activeOptionIndex: function () {\n      if (idx === state.activeOptionIndex) return null;\n      if (currentActiveOption === null) return null; // If we removed the option before the actual active index, then it would be out of sync. To\n      // fix this, we will find the correct (new) index position.\n\n      return nextOptions.indexOf(currentActiveOption);\n    }()\n  });\n}, _reducers);\nvar ListboxContext = /*#__PURE__*/createContext(null);\nListboxContext.displayName = 'ListboxContext';\nfunction useListboxContext(component) {\n  var context = useContext(ListboxContext);\n  if (context === null) {\n    var err = new Error(\"<\" + component + \" /> is missing a parent <\" + Listbox.name + \" /> component.\");\n    if (Error.captureStackTrace) Error.captureStackTrace(err, useListboxContext);\n    throw err;\n  }\n  return context;\n}\nfunction stateReducer(state, action) {\n  return match(action.type, reducers, state, action);\n} // ---\n\nvar DEFAULT_LISTBOX_TAG = Fragment;\nfunction Listbox(props) {\n  var _match;\n  var value = props.value,\n    onChange = props.onChange,\n    _props$disabled = props.disabled,\n    disabled = _props$disabled === void 0 ? false : _props$disabled,\n    _props$horizontal = props.horizontal,\n    horizontal = _props$horizontal === void 0 ? false : _props$horizontal,\n    passThroughProps = _objectWithoutPropertiesLoose(props, [\"value\", \"onChange\", \"disabled\", \"horizontal\"]);\n  var orientation = horizontal ? 'horizontal' : 'vertical';\n  var reducerBag = useReducer(stateReducer, {\n    listboxState: ListboxStates.Closed,\n    propsRef: {\n      current: {\n        value: value,\n        onChange: onChange\n      }\n    },\n    labelRef: createRef(),\n    buttonRef: createRef(),\n    optionsRef: createRef(),\n    disabled: disabled,\n    orientation: orientation,\n    options: [],\n    searchQuery: '',\n    activeOptionIndex: null\n  });\n  var _reducerBag$ = reducerBag[0],\n    listboxState = _reducerBag$.listboxState,\n    propsRef = _reducerBag$.propsRef,\n    optionsRef = _reducerBag$.optionsRef,\n    buttonRef = _reducerBag$.buttonRef,\n    dispatch = reducerBag[1];\n  useIsoMorphicEffect(function () {\n    propsRef.current.value = value;\n  }, [value, propsRef]);\n  useIsoMorphicEffect(function () {\n    propsRef.current.onChange = onChange;\n  }, [onChange, propsRef]);\n  useIsoMorphicEffect(function () {\n    return dispatch({\n      type: ActionTypes.SetDisabled,\n      disabled: disabled\n    });\n  }, [disabled]);\n  useIsoMorphicEffect(function () {\n    return dispatch({\n      type: ActionTypes.SetOrientation,\n      orientation: orientation\n    });\n  }, [orientation]); // Handle outside click\n\n  useWindowEvent('mousedown', function (event) {\n    var _buttonRef$current, _optionsRef$current;\n    var target = event.target;\n    if (listboxState !== ListboxStates.Open) return;\n    if ((_buttonRef$current = buttonRef.current) == null ? void 0 : _buttonRef$current.contains(target)) return;\n    if ((_optionsRef$current = optionsRef.current) == null ? void 0 : _optionsRef$current.contains(target)) return;\n    dispatch({\n      type: ActionTypes.CloseListbox\n    });\n    if (!isFocusableElement(target, FocusableMode.Loose)) {\n      var _buttonRef$current2;\n      event.preventDefault();\n      (_buttonRef$current2 = buttonRef.current) == null ? void 0 : _buttonRef$current2.focus();\n    }\n  });\n  var slot = useMemo(function () {\n    return {\n      open: listboxState === ListboxStates.Open,\n      disabled: disabled\n    };\n  }, [listboxState, disabled]);\n  return React.createElement(ListboxContext.Provider, {\n    value: reducerBag\n  }, React.createElement(OpenClosedProvider, {\n    value: match(listboxState, (_match = {}, _match[ListboxStates.Open] = State.Open, _match[ListboxStates.Closed] = State.Closed, _match))\n  }, render({\n    props: passThroughProps,\n    slot: slot,\n    defaultTag: DEFAULT_LISTBOX_TAG,\n    name: 'Listbox'\n  })));\n} // ---\n\nvar DEFAULT_BUTTON_TAG = 'button';\nvar Button = /*#__PURE__*/forwardRefWithAs(function Button(props, ref) {\n  var _state$optionsRef$cur;\n  var _useListboxContext = useListboxContext([Listbox.name, Button.name].join('.')),\n    state = _useListboxContext[0],\n    dispatch = _useListboxContext[1];\n  var buttonRef = useSyncRefs(state.buttonRef, ref);\n  var id = \"headlessui-listbox-button-\" + useId();\n  var d = useDisposables();\n  var handleKeyDown = useCallback(function (event) {\n    switch (event.key) {\n      // Ref: https://www.w3.org/TR/wai-aria-practices-1.2/#keyboard-interaction-13\n      case Keys.Space:\n      case Keys.Enter:\n      case Keys.ArrowDown:\n        event.preventDefault();\n        dispatch({\n          type: ActionTypes.OpenListbox\n        });\n        d.nextFrame(function () {\n          if (!state.propsRef.current.value) dispatch({\n            type: ActionTypes.GoToOption,\n            focus: Focus.First\n          });\n        });\n        break;\n      case Keys.ArrowUp:\n        event.preventDefault();\n        dispatch({\n          type: ActionTypes.OpenListbox\n        });\n        d.nextFrame(function () {\n          if (!state.propsRef.current.value) dispatch({\n            type: ActionTypes.GoToOption,\n            focus: Focus.Last\n          });\n        });\n        break;\n    }\n  }, [dispatch, state, d]);\n  var handleKeyUp = useCallback(function (event) {\n    switch (event.key) {\n      case Keys.Space:\n        // Required for firefox, event.preventDefault() in handleKeyDown for\n        // the Space key doesn't cancel the handleKeyUp, which in turn\n        // triggers a *click*.\n        event.preventDefault();\n        break;\n    }\n  }, []);\n  var handleClick = useCallback(function (event) {\n    if (isDisabledReactIssue7711(event.currentTarget)) return event.preventDefault();\n    if (state.listboxState === ListboxStates.Open) {\n      dispatch({\n        type: ActionTypes.CloseListbox\n      });\n      d.nextFrame(function () {\n        var _state$buttonRef$curr;\n        return (_state$buttonRef$curr = state.buttonRef.current) == null ? void 0 : _state$buttonRef$curr.focus({\n          preventScroll: true\n        });\n      });\n    } else {\n      event.preventDefault();\n      dispatch({\n        type: ActionTypes.OpenListbox\n      });\n    }\n  }, [dispatch, d, state]);\n  var labelledby = useComputed(function () {\n    if (!state.labelRef.current) return undefined;\n    return [state.labelRef.current.id, id].join(' ');\n  }, [state.labelRef.current, id]);\n  var slot = useMemo(function () {\n    return {\n      open: state.listboxState === ListboxStates.Open,\n      disabled: state.disabled\n    };\n  }, [state]);\n  var passthroughProps = props;\n  var propsWeControl = {\n    ref: buttonRef,\n    id: id,\n    type: useResolveButtonType(props, state.buttonRef),\n    'aria-haspopup': true,\n    'aria-controls': (_state$optionsRef$cur = state.optionsRef.current) == null ? void 0 : _state$optionsRef$cur.id,\n    'aria-expanded': state.disabled ? undefined : state.listboxState === ListboxStates.Open,\n    'aria-labelledby': labelledby,\n    disabled: state.disabled,\n    onKeyDown: handleKeyDown,\n    onKeyUp: handleKeyUp,\n    onClick: handleClick\n  };\n  return render({\n    props: _extends({}, passthroughProps, propsWeControl),\n    slot: slot,\n    defaultTag: DEFAULT_BUTTON_TAG,\n    name: 'Listbox.Button'\n  });\n}); // ---\n\nvar DEFAULT_LABEL_TAG = 'label';\nfunction Label(props) {\n  var _useListboxContext2 = useListboxContext([Listbox.name, Label.name].join('.')),\n    state = _useListboxContext2[0];\n  var id = \"headlessui-listbox-label-\" + useId();\n  var handleClick = useCallback(function () {\n    var _state$buttonRef$curr2;\n    return (_state$buttonRef$curr2 = state.buttonRef.current) == null ? void 0 : _state$buttonRef$curr2.focus({\n      preventScroll: true\n    });\n  }, [state.buttonRef]);\n  var slot = useMemo(function () {\n    return {\n      open: state.listboxState === ListboxStates.Open,\n      disabled: state.disabled\n    };\n  }, [state]);\n  var propsWeControl = {\n    ref: state.labelRef,\n    id: id,\n    onClick: handleClick\n  };\n  return render({\n    props: _extends({}, props, propsWeControl),\n    slot: slot,\n    defaultTag: DEFAULT_LABEL_TAG,\n    name: 'Listbox.Label'\n  });\n} // ---\n\nvar DEFAULT_OPTIONS_TAG = 'ul';\nvar OptionsRenderFeatures = Features.RenderStrategy | Features.Static;\nvar Options = /*#__PURE__*/forwardRefWithAs(function Options(props, ref) {\n  var _state$options$state$;\n  var _useListboxContext3 = useListboxContext([Listbox.name, Options.name].join('.')),\n    state = _useListboxContext3[0],\n    dispatch = _useListboxContext3[1];\n  var optionsRef = useSyncRefs(state.optionsRef, ref);\n  var id = \"headlessui-listbox-options-\" + useId();\n  var d = useDisposables();\n  var searchDisposables = useDisposables();\n  var usesOpenClosedState = useOpenClosed();\n  var visible = function () {\n    if (usesOpenClosedState !== null) {\n      return usesOpenClosedState === State.Open;\n    }\n    return state.listboxState === ListboxStates.Open;\n  }();\n  useIsoMorphicEffect(function () {\n    var container = state.optionsRef.current;\n    if (!container) return;\n    if (state.listboxState !== ListboxStates.Open) return;\n    if (container === document.activeElement) return;\n    container.focus({\n      preventScroll: true\n    });\n  }, [state.listboxState, state.optionsRef]);\n  var handleKeyDown = useCallback(function (event) {\n    searchDisposables.dispose();\n    switch (event.key) {\n      // Ref: https://www.w3.org/TR/wai-aria-practices-1.2/#keyboard-interaction-12\n      // @ts-expect-error Fallthrough is expected here\n      case Keys.Space:\n        if (state.searchQuery !== '') {\n          event.preventDefault();\n          event.stopPropagation();\n          return dispatch({\n            type: ActionTypes.Search,\n            value: event.key\n          });\n        }\n\n      // When in type ahead mode, fallthrough\n\n      case Keys.Enter:\n        event.preventDefault();\n        event.stopPropagation();\n        dispatch({\n          type: ActionTypes.CloseListbox\n        });\n        if (state.activeOptionIndex !== null) {\n          var dataRef = state.options[state.activeOptionIndex].dataRef;\n          state.propsRef.current.onChange(dataRef.current.value);\n        }\n        disposables().nextFrame(function () {\n          var _state$buttonRef$curr3;\n          return (_state$buttonRef$curr3 = state.buttonRef.current) == null ? void 0 : _state$buttonRef$curr3.focus({\n            preventScroll: true\n          });\n        });\n        break;\n      case match(state.orientation, {\n        vertical: Keys.ArrowDown,\n        horizontal: Keys.ArrowRight\n      }):\n        event.preventDefault();\n        event.stopPropagation();\n        return dispatch({\n          type: ActionTypes.GoToOption,\n          focus: Focus.Next\n        });\n      case match(state.orientation, {\n        vertical: Keys.ArrowUp,\n        horizontal: Keys.ArrowLeft\n      }):\n        event.preventDefault();\n        event.stopPropagation();\n        return dispatch({\n          type: ActionTypes.GoToOption,\n          focus: Focus.Previous\n        });\n      case Keys.Home:\n      case Keys.PageUp:\n        event.preventDefault();\n        event.stopPropagation();\n        return dispatch({\n          type: ActionTypes.GoToOption,\n          focus: Focus.First\n        });\n      case Keys.End:\n      case Keys.PageDown:\n        event.preventDefault();\n        event.stopPropagation();\n        return dispatch({\n          type: ActionTypes.GoToOption,\n          focus: Focus.Last\n        });\n      case Keys.Escape:\n        event.preventDefault();\n        event.stopPropagation();\n        dispatch({\n          type: ActionTypes.CloseListbox\n        });\n        return d.nextFrame(function () {\n          var _state$buttonRef$curr4;\n          return (_state$buttonRef$curr4 = state.buttonRef.current) == null ? void 0 : _state$buttonRef$curr4.focus({\n            preventScroll: true\n          });\n        });\n      case Keys.Tab:\n        event.preventDefault();\n        event.stopPropagation();\n        break;\n      default:\n        if (event.key.length === 1) {\n          dispatch({\n            type: ActionTypes.Search,\n            value: event.key\n          });\n          searchDisposables.setTimeout(function () {\n            return dispatch({\n              type: ActionTypes.ClearSearch\n            });\n          }, 350);\n        }\n        break;\n    }\n  }, [d, dispatch, searchDisposables, state]);\n  var labelledby = useComputed(function () {\n    var _state$labelRef$curre, _state$labelRef$curre2, _state$buttonRef$curr5;\n    return (_state$labelRef$curre = (_state$labelRef$curre2 = state.labelRef.current) == null ? void 0 : _state$labelRef$curre2.id) != null ? _state$labelRef$curre : (_state$buttonRef$curr5 = state.buttonRef.current) == null ? void 0 : _state$buttonRef$curr5.id;\n  }, [state.labelRef.current, state.buttonRef.current]);\n  var slot = useMemo(function () {\n    return {\n      open: state.listboxState === ListboxStates.Open\n    };\n  }, [state]);\n  var propsWeControl = {\n    'aria-activedescendant': state.activeOptionIndex === null ? undefined : (_state$options$state$ = state.options[state.activeOptionIndex]) == null ? void 0 : _state$options$state$.id,\n    'aria-labelledby': labelledby,\n    'aria-orientation': state.orientation,\n    id: id,\n    onKeyDown: handleKeyDown,\n    role: 'listbox',\n    tabIndex: 0,\n    ref: optionsRef\n  };\n  var passthroughProps = props;\n  return render({\n    props: _extends({}, passthroughProps, propsWeControl),\n    slot: slot,\n    defaultTag: DEFAULT_OPTIONS_TAG,\n    features: OptionsRenderFeatures,\n    visible: visible,\n    name: 'Listbox.Options'\n  });\n}); // ---\n\nvar DEFAULT_OPTION_TAG = 'li';\nfunction Option(props) {\n  var _props$disabled2 = props.disabled,\n    disabled = _props$disabled2 === void 0 ? false : _props$disabled2,\n    value = props.value,\n    passthroughProps = _objectWithoutPropertiesLoose(props, [\"disabled\", \"value\"]);\n  var _useListboxContext4 = useListboxContext([Listbox.name, Option.name].join('.')),\n    state = _useListboxContext4[0],\n    dispatch = _useListboxContext4[1];\n  var id = \"headlessui-listbox-option-\" + useId();\n  var active = state.activeOptionIndex !== null ? state.options[state.activeOptionIndex].id === id : false;\n  var selected = state.propsRef.current.value === value;\n  var bag = useRef({\n    disabled: disabled,\n    value: value\n  });\n  useIsoMorphicEffect(function () {\n    bag.current.disabled = disabled;\n  }, [bag, disabled]);\n  useIsoMorphicEffect(function () {\n    bag.current.value = value;\n  }, [bag, value]);\n  useIsoMorphicEffect(function () {\n    var _document$getElementB, _document$getElementB2;\n    bag.current.textValue = (_document$getElementB = document.getElementById(id)) == null ? void 0 : (_document$getElementB2 = _document$getElementB.textContent) == null ? void 0 : _document$getElementB2.toLowerCase();\n  }, [bag, id]);\n  var select = useCallback(function () {\n    return state.propsRef.current.onChange(value);\n  }, [state.propsRef, value]);\n  useIsoMorphicEffect(function () {\n    dispatch({\n      type: ActionTypes.RegisterOption,\n      id: id,\n      dataRef: bag\n    });\n    return function () {\n      return dispatch({\n        type: ActionTypes.UnregisterOption,\n        id: id\n      });\n    };\n  }, [bag, id]);\n  useIsoMorphicEffect(function () {\n    var _document$getElementB3;\n    if (state.listboxState !== ListboxStates.Open) return;\n    if (!selected) return;\n    dispatch({\n      type: ActionTypes.GoToOption,\n      focus: Focus.Specific,\n      id: id\n    });\n    (_document$getElementB3 = document.getElementById(id)) == null ? void 0 : _document$getElementB3.focus == null ? void 0 : _document$getElementB3.focus();\n  }, [state.listboxState]);\n  useIsoMorphicEffect(function () {\n    if (state.listboxState !== ListboxStates.Open) return;\n    if (!active) return;\n    var d = disposables();\n    d.nextFrame(function () {\n      var _document$getElementB4;\n      return (_document$getElementB4 = document.getElementById(id)) == null ? void 0 : _document$getElementB4.scrollIntoView == null ? void 0 : _document$getElementB4.scrollIntoView({\n        block: 'nearest'\n      });\n    });\n    return d.dispose;\n  }, [id, active, state.listboxState]);\n  var handleClick = useCallback(function (event) {\n    if (disabled) return event.preventDefault();\n    select();\n    dispatch({\n      type: ActionTypes.CloseListbox\n    });\n    disposables().nextFrame(function () {\n      var _state$buttonRef$curr6;\n      return (_state$buttonRef$curr6 = state.buttonRef.current) == null ? void 0 : _state$buttonRef$curr6.focus({\n        preventScroll: true\n      });\n    });\n  }, [dispatch, state.buttonRef, disabled, select]);\n  var handleFocus = useCallback(function () {\n    if (disabled) return dispatch({\n      type: ActionTypes.GoToOption,\n      focus: Focus.Nothing\n    });\n    dispatch({\n      type: ActionTypes.GoToOption,\n      focus: Focus.Specific,\n      id: id\n    });\n  }, [disabled, id, dispatch]);\n  var handleMove = useCallback(function () {\n    if (disabled) return;\n    if (active) return;\n    dispatch({\n      type: ActionTypes.GoToOption,\n      focus: Focus.Specific,\n      id: id\n    });\n  }, [disabled, active, id, dispatch]);\n  var handleLeave = useCallback(function () {\n    if (disabled) return;\n    if (!active) return;\n    dispatch({\n      type: ActionTypes.GoToOption,\n      focus: Focus.Nothing\n    });\n  }, [disabled, active, dispatch]);\n  var slot = useMemo(function () {\n    return {\n      active: active,\n      selected: selected,\n      disabled: disabled\n    };\n  }, [active, selected, disabled]);\n  var propsWeControl = {\n    id: id,\n    role: 'option',\n    tabIndex: disabled === true ? undefined : -1,\n    'aria-disabled': disabled === true ? true : undefined,\n    'aria-selected': selected === true ? true : undefined,\n    disabled: undefined,\n    onClick: handleClick,\n    onFocus: handleFocus,\n    onPointerMove: handleMove,\n    onMouseMove: handleMove,\n    onPointerLeave: handleLeave,\n    onMouseLeave: handleLeave\n  };\n  return render({\n    props: _extends({}, passthroughProps, propsWeControl),\n    slot: slot,\n    defaultTag: DEFAULT_OPTION_TAG,\n    name: 'Listbox.Option'\n  });\n} // ---\n\nListbox.Button = Button;\nListbox.Label = Label;\nListbox.Options = Options;\nListbox.Option = Option;\nexport { Listbox };","map":{"version":3,"sources":["/Users/prince.kumar/Documents/Niyo-Dev/Games/travel-wordle/truddle/node_modules/@headlessui/react/src/components/listbox/listbox.tsx"],"names":["ListboxStates","ActionTypes","reducers","CloseListbox","state","disabled","listboxState","Closed","activeOptionIndex","OpenListbox","Open","SetDisabled","action","SetOrientation","orientation","GoToOption","calculateActiveIndex","resolveItems","options","resolveActiveIndex","resolveId","item","id","resolveDisabled","dataRef","current","searchQuery","Search","value","toLowerCase","match","findIndex","option","textValue","startsWith","ClearSearch","RegisterOption","UnregisterOption","nextOptions","slice","currentActiveOption","idx","a","splice","indexOf","ListboxContext","createContext","displayName","useListboxContext","component","context","useContext","err","Error","Listbox","name","captureStackTrace","stateReducer","type","DEFAULT_LISTBOX_TAG","Fragment","props","onChange","horizontal","passThroughProps","reducerBag","useReducer","propsRef","labelRef","createRef","buttonRef","optionsRef","dispatch","useIsoMorphicEffect","useWindowEvent","target","event","contains","isFocusableElement","FocusableMode","Loose","preventDefault","focus","slot","useMemo","open","Provider","OpenClosedProvider","State","render","defaultTag","DEFAULT_BUTTON_TAG","Button","forwardRefWithAs","ref","join","useSyncRefs","useId","d","useDisposables","handleKeyDown","useCallback","key","Keys","Space","Enter","ArrowDown","nextFrame","Focus","First","ArrowUp","Last","handleKeyUp","handleClick","isDisabledReactIssue7711","currentTarget","preventScroll","labelledby","useComputed","undefined","passthroughProps","propsWeControl","useResolveButtonType","onKeyDown","onKeyUp","onClick","DEFAULT_LABEL_TAG","Label","DEFAULT_OPTIONS_TAG","OptionsRenderFeatures","Features","RenderStrategy","Static","Options","searchDisposables","usesOpenClosedState","useOpenClosed","visible","container","document","activeElement","dispose","stopPropagation","disposables","vertical","ArrowRight","Next","ArrowLeft","Previous","Home","PageUp","End","PageDown","Escape","Tab","length","setTimeout","role","tabIndex","features","DEFAULT_OPTION_TAG","Option","active","selected","bag","useRef","getElementById","textContent","select","Specific","scrollIntoView","block","handleFocus","Nothing","handleMove","handleLeave","onFocus","onPointerMove","onMouseMove","onPointerLeave","onMouseLeave"],"mappings":"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","sourcesContent":["import React, {\n  Fragment,\n  createContext,\n  createRef,\n  useCallback,\n  useContext,\n  useMemo,\n  useReducer,\n  useRef,\n\n  // Types\n  Dispatch,\n  ElementType,\n  KeyboardEvent as ReactKeyboardEvent,\n  MouseEvent as ReactMouseEvent,\n  MutableRefObject,\n  Ref,\n} from 'react'\n\nimport { useDisposables } from '../../hooks/use-disposables'\nimport { useId } from '../../hooks/use-id'\nimport { useIsoMorphicEffect } from '../../hooks/use-iso-morphic-effect'\nimport { useComputed } from '../../hooks/use-computed'\nimport { useSyncRefs } from '../../hooks/use-sync-refs'\nimport { Props } from '../../types'\nimport { Features, forwardRefWithAs, PropsForFeatures, render } from '../../utils/render'\nimport { match } from '../../utils/match'\nimport { disposables } from '../../utils/disposables'\nimport { Keys } from '../keyboard'\nimport { Focus, calculateActiveIndex } from '../../utils/calculate-active-index'\nimport { isDisabledReactIssue7711 } from '../../utils/bugs'\nimport { isFocusableElement, FocusableMode } from '../../utils/focus-management'\nimport { useWindowEvent } from '../../hooks/use-window-event'\nimport { useOpenClosed, State, OpenClosedProvider } from '../../internal/open-closed'\nimport { useResolveButtonType } from '../../hooks/use-resolve-button-type'\n\nenum ListboxStates {\n  Open,\n  Closed,\n}\n\ntype ListboxOptionDataRef = MutableRefObject<{\n  textValue?: string\n  disabled: boolean\n  value: unknown\n}>\n\ninterface StateDefinition {\n  listboxState: ListboxStates\n\n  orientation: 'horizontal' | 'vertical'\n\n  propsRef: MutableRefObject<{ value: unknown; onChange(value: unknown): void }>\n  labelRef: MutableRefObject<HTMLLabelElement | null>\n  buttonRef: MutableRefObject<HTMLButtonElement | null>\n  optionsRef: MutableRefObject<HTMLUListElement | null>\n\n  disabled: boolean\n  options: { id: string; dataRef: ListboxOptionDataRef }[]\n  searchQuery: string\n  activeOptionIndex: number | null\n}\n\nenum ActionTypes {\n  OpenListbox,\n  CloseListbox,\n\n  SetDisabled,\n  SetOrientation,\n\n  GoToOption,\n  Search,\n  ClearSearch,\n\n  RegisterOption,\n  UnregisterOption,\n}\n\ntype Actions =\n  | { type: ActionTypes.CloseListbox }\n  | { type: ActionTypes.OpenListbox }\n  | { type: ActionTypes.SetDisabled; disabled: boolean }\n  | { type: ActionTypes.SetOrientation; orientation: StateDefinition['orientation'] }\n  | { type: ActionTypes.GoToOption; focus: Focus.Specific; id: string }\n  | { type: ActionTypes.GoToOption; focus: Exclude<Focus, Focus.Specific> }\n  | { type: ActionTypes.Search; value: string }\n  | { type: ActionTypes.ClearSearch }\n  | { type: ActionTypes.RegisterOption; id: string; dataRef: ListboxOptionDataRef }\n  | { type: ActionTypes.UnregisterOption; id: string }\n\nlet reducers: {\n  [P in ActionTypes]: (\n    state: StateDefinition,\n    action: Extract<Actions, { type: P }>\n  ) => StateDefinition\n} = {\n  [ActionTypes.CloseListbox](state) {\n    if (state.disabled) return state\n    if (state.listboxState === ListboxStates.Closed) return state\n    return { ...state, activeOptionIndex: null, listboxState: ListboxStates.Closed }\n  },\n  [ActionTypes.OpenListbox](state) {\n    if (state.disabled) return state\n    if (state.listboxState === ListboxStates.Open) return state\n    return { ...state, listboxState: ListboxStates.Open }\n  },\n  [ActionTypes.SetDisabled](state, action) {\n    if (state.disabled === action.disabled) return state\n    return { ...state, disabled: action.disabled }\n  },\n  [ActionTypes.SetOrientation](state, action) {\n    if (state.orientation === action.orientation) return state\n    return { ...state, orientation: action.orientation }\n  },\n  [ActionTypes.GoToOption](state, action) {\n    if (state.disabled) return state\n    if (state.listboxState === ListboxStates.Closed) return state\n\n    let activeOptionIndex = calculateActiveIndex(action, {\n      resolveItems: () => state.options,\n      resolveActiveIndex: () => state.activeOptionIndex,\n      resolveId: item => item.id,\n      resolveDisabled: item => item.dataRef.current.disabled,\n    })\n\n    if (state.searchQuery === '' && state.activeOptionIndex === activeOptionIndex) return state\n    return { ...state, searchQuery: '', activeOptionIndex }\n  },\n  [ActionTypes.Search]: (state, action) => {\n    if (state.disabled) return state\n    if (state.listboxState === ListboxStates.Closed) return state\n\n    let searchQuery = state.searchQuery + action.value.toLowerCase()\n    let match = state.options.findIndex(\n      option =>\n        !option.dataRef.current.disabled &&\n        option.dataRef.current.textValue?.startsWith(searchQuery)\n    )\n\n    if (match === -1 || match === state.activeOptionIndex) return { ...state, searchQuery }\n    return { ...state, searchQuery, activeOptionIndex: match }\n  },\n  [ActionTypes.ClearSearch](state) {\n    if (state.disabled) return state\n    if (state.listboxState === ListboxStates.Closed) return state\n    if (state.searchQuery === '') return state\n    return { ...state, searchQuery: '' }\n  },\n  [ActionTypes.RegisterOption]: (state, action) => ({\n    ...state,\n    options: [...state.options, { id: action.id, dataRef: action.dataRef }],\n  }),\n  [ActionTypes.UnregisterOption]: (state, action) => {\n    let nextOptions = state.options.slice()\n    let currentActiveOption =\n      state.activeOptionIndex !== null ? nextOptions[state.activeOptionIndex] : null\n\n    let idx = nextOptions.findIndex(a => a.id === action.id)\n\n    if (idx !== -1) nextOptions.splice(idx, 1)\n\n    return {\n      ...state,\n      options: nextOptions,\n      activeOptionIndex: (() => {\n        if (idx === state.activeOptionIndex) return null\n        if (currentActiveOption === null) return null\n\n        // If we removed the option before the actual active index, then it would be out of sync. To\n        // fix this, we will find the correct (new) index position.\n        return nextOptions.indexOf(currentActiveOption)\n      })(),\n    }\n  },\n}\n\nlet ListboxContext = createContext<[StateDefinition, Dispatch<Actions>] | null>(null)\nListboxContext.displayName = 'ListboxContext'\n\nfunction useListboxContext(component: string) {\n  let context = useContext(ListboxContext)\n  if (context === null) {\n    let err = new Error(`<${component} /> is missing a parent <${Listbox.name} /> component.`)\n    if (Error.captureStackTrace) Error.captureStackTrace(err, useListboxContext)\n    throw err\n  }\n  return context\n}\n\nfunction stateReducer(state: StateDefinition, action: Actions) {\n  return match(action.type, reducers, state, action)\n}\n\n// ---\n\nlet DEFAULT_LISTBOX_TAG = Fragment\ninterface ListboxRenderPropArg {\n  open: boolean\n  disabled: boolean\n}\n\nexport function Listbox<TTag extends ElementType = typeof DEFAULT_LISTBOX_TAG, TType = string>(\n  props: Props<TTag, ListboxRenderPropArg, 'value' | 'onChange'> & {\n    value: TType\n    onChange(value: TType): void\n    disabled?: boolean\n    horizontal?: boolean\n  }\n) {\n  let { value, onChange, disabled = false, horizontal = false, ...passThroughProps } = props\n  const orientation = horizontal ? 'horizontal' : 'vertical'\n\n  let reducerBag = useReducer(stateReducer, {\n    listboxState: ListboxStates.Closed,\n    propsRef: { current: { value, onChange } },\n    labelRef: createRef(),\n    buttonRef: createRef(),\n    optionsRef: createRef(),\n    disabled,\n    orientation,\n    options: [],\n    searchQuery: '',\n    activeOptionIndex: null,\n  } as StateDefinition)\n  let [{ listboxState, propsRef, optionsRef, buttonRef }, dispatch] = reducerBag\n\n  useIsoMorphicEffect(() => {\n    propsRef.current.value = value\n  }, [value, propsRef])\n  useIsoMorphicEffect(() => {\n    propsRef.current.onChange = onChange\n  }, [onChange, propsRef])\n  useIsoMorphicEffect(() => dispatch({ type: ActionTypes.SetDisabled, disabled }), [disabled])\n  useIsoMorphicEffect(() => dispatch({ type: ActionTypes.SetOrientation, orientation }), [\n    orientation,\n  ])\n\n  // Handle outside click\n  useWindowEvent('mousedown', event => {\n    let target = event.target as HTMLElement\n\n    if (listboxState !== ListboxStates.Open) return\n\n    if (buttonRef.current?.contains(target)) return\n    if (optionsRef.current?.contains(target)) return\n\n    dispatch({ type: ActionTypes.CloseListbox })\n\n    if (!isFocusableElement(target, FocusableMode.Loose)) {\n      event.preventDefault()\n      buttonRef.current?.focus()\n    }\n  })\n\n  let slot = useMemo<ListboxRenderPropArg>(\n    () => ({ open: listboxState === ListboxStates.Open, disabled }),\n    [listboxState, disabled]\n  )\n\n  return (\n    <ListboxContext.Provider value={reducerBag}>\n      <OpenClosedProvider\n        value={match(listboxState, {\n          [ListboxStates.Open]: State.Open,\n          [ListboxStates.Closed]: State.Closed,\n        })}\n      >\n        {render({\n          props: passThroughProps,\n          slot,\n          defaultTag: DEFAULT_LISTBOX_TAG,\n          name: 'Listbox',\n        })}\n      </OpenClosedProvider>\n    </ListboxContext.Provider>\n  )\n}\n\n// ---\n\nlet DEFAULT_BUTTON_TAG = 'button' as const\ninterface ButtonRenderPropArg {\n  open: boolean\n  disabled: boolean\n}\ntype ButtonPropsWeControl =\n  | 'id'\n  | 'type'\n  | 'aria-haspopup'\n  | 'aria-controls'\n  | 'aria-expanded'\n  | 'aria-labelledby'\n  | 'disabled'\n  | 'onKeyDown'\n  | 'onClick'\n\nlet Button = forwardRefWithAs(function Button<TTag extends ElementType = typeof DEFAULT_BUTTON_TAG>(\n  props: Props<TTag, ButtonRenderPropArg, ButtonPropsWeControl>,\n  ref: Ref<HTMLButtonElement>\n) {\n  let [state, dispatch] = useListboxContext([Listbox.name, Button.name].join('.'))\n  let buttonRef = useSyncRefs(state.buttonRef, ref)\n\n  let id = `headlessui-listbox-button-${useId()}`\n  let d = useDisposables()\n\n  let handleKeyDown = useCallback(\n    (event: ReactKeyboardEvent<HTMLButtonElement>) => {\n      switch (event.key) {\n        // Ref: https://www.w3.org/TR/wai-aria-practices-1.2/#keyboard-interaction-13\n\n        case Keys.Space:\n        case Keys.Enter:\n        case Keys.ArrowDown:\n          event.preventDefault()\n          dispatch({ type: ActionTypes.OpenListbox })\n          d.nextFrame(() => {\n            if (!state.propsRef.current.value)\n              dispatch({ type: ActionTypes.GoToOption, focus: Focus.First })\n          })\n          break\n\n        case Keys.ArrowUp:\n          event.preventDefault()\n          dispatch({ type: ActionTypes.OpenListbox })\n          d.nextFrame(() => {\n            if (!state.propsRef.current.value)\n              dispatch({ type: ActionTypes.GoToOption, focus: Focus.Last })\n          })\n          break\n      }\n    },\n    [dispatch, state, d]\n  )\n\n  let handleKeyUp = useCallback((event: ReactKeyboardEvent<HTMLButtonElement>) => {\n    switch (event.key) {\n      case Keys.Space:\n        // Required for firefox, event.preventDefault() in handleKeyDown for\n        // the Space key doesn't cancel the handleKeyUp, which in turn\n        // triggers a *click*.\n        event.preventDefault()\n        break\n    }\n  }, [])\n\n  let handleClick = useCallback(\n    (event: ReactMouseEvent) => {\n      if (isDisabledReactIssue7711(event.currentTarget)) return event.preventDefault()\n      if (state.listboxState === ListboxStates.Open) {\n        dispatch({ type: ActionTypes.CloseListbox })\n        d.nextFrame(() => state.buttonRef.current?.focus({ preventScroll: true }))\n      } else {\n        event.preventDefault()\n        dispatch({ type: ActionTypes.OpenListbox })\n      }\n    },\n    [dispatch, d, state]\n  )\n\n  let labelledby = useComputed(() => {\n    if (!state.labelRef.current) return undefined\n    return [state.labelRef.current.id, id].join(' ')\n  }, [state.labelRef.current, id])\n\n  let slot = useMemo<ButtonRenderPropArg>(\n    () => ({ open: state.listboxState === ListboxStates.Open, disabled: state.disabled }),\n    [state]\n  )\n  let passthroughProps = props\n  let propsWeControl = {\n    ref: buttonRef,\n    id,\n    type: useResolveButtonType(props, state.buttonRef),\n    'aria-haspopup': true,\n    'aria-controls': state.optionsRef.current?.id,\n    'aria-expanded': state.disabled ? undefined : state.listboxState === ListboxStates.Open,\n    'aria-labelledby': labelledby,\n    disabled: state.disabled,\n    onKeyDown: handleKeyDown,\n    onKeyUp: handleKeyUp,\n    onClick: handleClick,\n  }\n\n  return render({\n    props: { ...passthroughProps, ...propsWeControl },\n    slot,\n    defaultTag: DEFAULT_BUTTON_TAG,\n    name: 'Listbox.Button',\n  })\n})\n\n// ---\n\nlet DEFAULT_LABEL_TAG = 'label' as const\ninterface LabelRenderPropArg {\n  open: boolean\n  disabled: boolean\n}\ntype LabelPropsWeControl = 'id' | 'ref' | 'onClick'\n\nfunction Label<TTag extends ElementType = typeof DEFAULT_LABEL_TAG>(\n  props: Props<TTag, LabelRenderPropArg, LabelPropsWeControl>\n) {\n  let [state] = useListboxContext([Listbox.name, Label.name].join('.'))\n  let id = `headlessui-listbox-label-${useId()}`\n\n  let handleClick = useCallback(() => state.buttonRef.current?.focus({ preventScroll: true }), [\n    state.buttonRef,\n  ])\n\n  let slot = useMemo<LabelRenderPropArg>(\n    () => ({ open: state.listboxState === ListboxStates.Open, disabled: state.disabled }),\n    [state]\n  )\n  let propsWeControl = { ref: state.labelRef, id, onClick: handleClick }\n  return render({\n    props: { ...props, ...propsWeControl },\n    slot,\n    defaultTag: DEFAULT_LABEL_TAG,\n    name: 'Listbox.Label',\n  })\n}\n\n// ---\n\nlet DEFAULT_OPTIONS_TAG = 'ul' as const\ninterface OptionsRenderPropArg {\n  open: boolean\n}\ntype OptionsPropsWeControl =\n  | 'aria-activedescendant'\n  | 'aria-labelledby'\n  | 'aria-orientation'\n  | 'id'\n  | 'onKeyDown'\n  | 'role'\n  | 'tabIndex'\n\nlet OptionsRenderFeatures = Features.RenderStrategy | Features.Static\n\nlet Options = forwardRefWithAs(function Options<\n  TTag extends ElementType = typeof DEFAULT_OPTIONS_TAG\n>(\n  props: Props<TTag, OptionsRenderPropArg, OptionsPropsWeControl> &\n    PropsForFeatures<typeof OptionsRenderFeatures>,\n  ref: Ref<HTMLUListElement>\n) {\n  let [state, dispatch] = useListboxContext([Listbox.name, Options.name].join('.'))\n  let optionsRef = useSyncRefs(state.optionsRef, ref)\n\n  let id = `headlessui-listbox-options-${useId()}`\n  let d = useDisposables()\n  let searchDisposables = useDisposables()\n\n  let usesOpenClosedState = useOpenClosed()\n  let visible = (() => {\n    if (usesOpenClosedState !== null) {\n      return usesOpenClosedState === State.Open\n    }\n\n    return state.listboxState === ListboxStates.Open\n  })()\n\n  useIsoMorphicEffect(() => {\n    let container = state.optionsRef.current\n    if (!container) return\n    if (state.listboxState !== ListboxStates.Open) return\n    if (container === document.activeElement) return\n\n    container.focus({ preventScroll: true })\n  }, [state.listboxState, state.optionsRef])\n\n  let handleKeyDown = useCallback(\n    (event: ReactKeyboardEvent<HTMLUListElement>) => {\n      searchDisposables.dispose()\n\n      switch (event.key) {\n        // Ref: https://www.w3.org/TR/wai-aria-practices-1.2/#keyboard-interaction-12\n\n        // @ts-expect-error Fallthrough is expected here\n        case Keys.Space:\n          if (state.searchQuery !== '') {\n            event.preventDefault()\n            event.stopPropagation()\n            return dispatch({ type: ActionTypes.Search, value: event.key })\n          }\n        // When in type ahead mode, fallthrough\n        case Keys.Enter:\n          event.preventDefault()\n          event.stopPropagation()\n          dispatch({ type: ActionTypes.CloseListbox })\n          if (state.activeOptionIndex !== null) {\n            let { dataRef } = state.options[state.activeOptionIndex]\n            state.propsRef.current.onChange(dataRef.current.value)\n          }\n          disposables().nextFrame(() => state.buttonRef.current?.focus({ preventScroll: true }))\n          break\n\n        case match(state.orientation, { vertical: Keys.ArrowDown, horizontal: Keys.ArrowRight }):\n          event.preventDefault()\n          event.stopPropagation()\n          return dispatch({ type: ActionTypes.GoToOption, focus: Focus.Next })\n\n        case match(state.orientation, { vertical: Keys.ArrowUp, horizontal: Keys.ArrowLeft }):\n          event.preventDefault()\n          event.stopPropagation()\n          return dispatch({ type: ActionTypes.GoToOption, focus: Focus.Previous })\n\n        case Keys.Home:\n        case Keys.PageUp:\n          event.preventDefault()\n          event.stopPropagation()\n          return dispatch({ type: ActionTypes.GoToOption, focus: Focus.First })\n\n        case Keys.End:\n        case Keys.PageDown:\n          event.preventDefault()\n          event.stopPropagation()\n          return dispatch({ type: ActionTypes.GoToOption, focus: Focus.Last })\n\n        case Keys.Escape:\n          event.preventDefault()\n          event.stopPropagation()\n          dispatch({ type: ActionTypes.CloseListbox })\n          return d.nextFrame(() => state.buttonRef.current?.focus({ preventScroll: true }))\n\n        case Keys.Tab:\n          event.preventDefault()\n          event.stopPropagation()\n          break\n\n        default:\n          if (event.key.length === 1) {\n            dispatch({ type: ActionTypes.Search, value: event.key })\n            searchDisposables.setTimeout(() => dispatch({ type: ActionTypes.ClearSearch }), 350)\n          }\n          break\n      }\n    },\n    [d, dispatch, searchDisposables, state]\n  )\n\n  let labelledby = useComputed(() => state.labelRef.current?.id ?? state.buttonRef.current?.id, [\n    state.labelRef.current,\n    state.buttonRef.current,\n  ])\n\n  let slot = useMemo<OptionsRenderPropArg>(\n    () => ({ open: state.listboxState === ListboxStates.Open }),\n    [state]\n  )\n  let propsWeControl = {\n    'aria-activedescendant':\n      state.activeOptionIndex === null ? undefined : state.options[state.activeOptionIndex]?.id,\n    'aria-labelledby': labelledby,\n    'aria-orientation': state.orientation,\n    id,\n    onKeyDown: handleKeyDown,\n    role: 'listbox',\n    tabIndex: 0,\n    ref: optionsRef,\n  }\n  let passthroughProps = props\n\n  return render({\n    props: { ...passthroughProps, ...propsWeControl },\n    slot,\n    defaultTag: DEFAULT_OPTIONS_TAG,\n    features: OptionsRenderFeatures,\n    visible,\n    name: 'Listbox.Options',\n  })\n})\n\n// ---\n\nlet DEFAULT_OPTION_TAG = 'li' as const\ninterface OptionRenderPropArg {\n  active: boolean\n  selected: boolean\n  disabled: boolean\n}\ntype ListboxOptionPropsWeControl =\n  | 'id'\n  | 'role'\n  | 'tabIndex'\n  | 'aria-disabled'\n  | 'aria-selected'\n  | 'onPointerLeave'\n  | 'onMouseLeave'\n  | 'onPointerMove'\n  | 'onMouseMove'\n  | 'onFocus'\n\nfunction Option<\n  TTag extends ElementType = typeof DEFAULT_OPTION_TAG,\n  // TODO: One day we will be able to infer this type from the generic in Listbox itself.\n  // But today is not that day..\n  TType = Parameters<typeof Listbox>[0]['value']\n>(\n  props: Props<TTag, OptionRenderPropArg, ListboxOptionPropsWeControl | 'value'> & {\n    disabled?: boolean\n    value: TType\n  }\n) {\n  let { disabled = false, value, ...passthroughProps } = props\n  let [state, dispatch] = useListboxContext([Listbox.name, Option.name].join('.'))\n  let id = `headlessui-listbox-option-${useId()}`\n  let active =\n    state.activeOptionIndex !== null ? state.options[state.activeOptionIndex].id === id : false\n  let selected = state.propsRef.current.value === value\n\n  let bag = useRef<ListboxOptionDataRef['current']>({ disabled, value })\n\n  useIsoMorphicEffect(() => {\n    bag.current.disabled = disabled\n  }, [bag, disabled])\n  useIsoMorphicEffect(() => {\n    bag.current.value = value\n  }, [bag, value])\n  useIsoMorphicEffect(() => {\n    bag.current.textValue = document.getElementById(id)?.textContent?.toLowerCase()\n  }, [bag, id])\n\n  let select = useCallback(() => state.propsRef.current.onChange(value), [state.propsRef, value])\n\n  useIsoMorphicEffect(() => {\n    dispatch({ type: ActionTypes.RegisterOption, id, dataRef: bag })\n    return () => dispatch({ type: ActionTypes.UnregisterOption, id })\n  }, [bag, id])\n\n  useIsoMorphicEffect(() => {\n    if (state.listboxState !== ListboxStates.Open) return\n    if (!selected) return\n    dispatch({ type: ActionTypes.GoToOption, focus: Focus.Specific, id })\n    document.getElementById(id)?.focus?.()\n  }, [state.listboxState])\n\n  useIsoMorphicEffect(() => {\n    if (state.listboxState !== ListboxStates.Open) return\n    if (!active) return\n    let d = disposables()\n    d.nextFrame(() => document.getElementById(id)?.scrollIntoView?.({ block: 'nearest' }))\n    return d.dispose\n  }, [id, active, state.listboxState])\n\n  let handleClick = useCallback(\n    (event: { preventDefault: Function }) => {\n      if (disabled) return event.preventDefault()\n      select()\n      dispatch({ type: ActionTypes.CloseListbox })\n      disposables().nextFrame(() => state.buttonRef.current?.focus({ preventScroll: true }))\n    },\n    [dispatch, state.buttonRef, disabled, select]\n  )\n\n  let handleFocus = useCallback(() => {\n    if (disabled) return dispatch({ type: ActionTypes.GoToOption, focus: Focus.Nothing })\n    dispatch({ type: ActionTypes.GoToOption, focus: Focus.Specific, id })\n  }, [disabled, id, dispatch])\n\n  let handleMove = useCallback(() => {\n    if (disabled) return\n    if (active) return\n    dispatch({ type: ActionTypes.GoToOption, focus: Focus.Specific, id })\n  }, [disabled, active, id, dispatch])\n\n  let handleLeave = useCallback(() => {\n    if (disabled) return\n    if (!active) return\n    dispatch({ type: ActionTypes.GoToOption, focus: Focus.Nothing })\n  }, [disabled, active, dispatch])\n\n  let slot = useMemo<OptionRenderPropArg>(() => ({ active, selected, disabled }), [\n    active,\n    selected,\n    disabled,\n  ])\n  let propsWeControl = {\n    id,\n    role: 'option',\n    tabIndex: disabled === true ? undefined : -1,\n    'aria-disabled': disabled === true ? true : undefined,\n    'aria-selected': selected === true ? true : undefined,\n    disabled: undefined, // Never forward the `disabled` prop\n    onClick: handleClick,\n    onFocus: handleFocus,\n    onPointerMove: handleMove,\n    onMouseMove: handleMove,\n    onPointerLeave: handleLeave,\n    onMouseLeave: handleLeave,\n  }\n\n  return render({\n    props: { ...passthroughProps, ...propsWeControl },\n    slot,\n    defaultTag: DEFAULT_OPTION_TAG,\n    name: 'Listbox.Option',\n  })\n}\n\n// ---\n\nListbox.Button = Button\nListbox.Label = Label\nListbox.Options = Options\nListbox.Option = Option\n"]},"metadata":{},"sourceType":"module"}