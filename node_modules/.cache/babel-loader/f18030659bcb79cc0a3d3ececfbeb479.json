{"ast":null,"code":"function match(value, lookup) {\n  if (value in lookup) {\n    var returnValue = lookup[value];\n    for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n      args[_key - 2] = arguments[_key];\n    }\n    return typeof returnValue === 'function' ? returnValue.apply(void 0, args) : returnValue;\n  }\n  var error = new Error(\"Tried to handle \\\"\" + value + \"\\\" but there is no handler defined. Only defined handlers are: \" + Object.keys(lookup).map(function (key) {\n    return \"\\\"\" + key + \"\\\"\";\n  }).join(', ') + \".\");\n  if (Error.captureStackTrace) Error.captureStackTrace(error, match);\n  throw error;\n}\nexport { match };","map":{"version":3,"sources":["/Users/prince.kumar/Documents/Niyo-Dev/Games/travel-wordle/word-master/node_modules/@headlessui/react/src/utils/match.ts"],"names":["match","value","lookup","args","returnValue","error","Error","keys","map","key","join","captureStackTrace"],"mappings":"SAAgBA,KAAAA,CACdC,KAAAA,EACAC,MAAAA,EAAAA;EAGA,IAAID,KAAK,IAAIC,MAAb,EAAqB;IACnB,IAAIE,WAAW,GAAGF,MAAM,CAACD,KAAD,CAAxB;IADmB,KAAA,IAAA,IAAA,GAAA,SAAA,CAAA,MAAA,EAFlBE,IAEkB,GAAA,IAAA,KAAA,CAAA,IAAA,GAAA,CAAA,GAAA,IAAA,GAAA,CAAA,GAAA,CAAA,CAAA,EAAA,IAAA,GAAA,CAAA,EAAA,IAAA,GAAA,IAAA,EAAA,IAAA,EAAA,EAAA;MAFlBA,IAEkB,CAAA,IAAA,GAAA,CAAA,CAAA,GAAA,SAAA,CAAA,IAAA,CAAA;IAAA;IAEnB,OAAO,OAAOC,WAAP,KAAuB,UAAvB,GAAoCA,WAAW,CAAA,KAAXA,CAAAA,KAAAA,CAAAA,EAAeD,IAAfC,CAApC,GAA2DA,WAAlE;EACD;EAED,IAAIC,KAAK,GAAG,IAAIC,KAAJ,CAAA,oBAAA,GACUL,KADV,GAAA,iEAAA,GACgF,MAAM,CAACM,IAAP,CACxFL,MADwF,CAAA,CAGvFM,GAHuF,CAGnF,UAAA,GAAG,EAAA;IAAA,OAAA,IAAA,GAAQC,GAAR,GAAA,IAAA;EAAA,CAHgF,CAAA,CAIvFC,IAJuF,CAIlF,IAJkF,CADhF,GAAA,GAAA,CAAZ;EAOA,IAAIJ,KAAK,CAACK,iBAAV,EAA6BL,KAAK,CAACK,iBAANL,CAAwBD,KAAxBC,EAA+BN,KAA/BM,CAAAA;EAC7B,MAAMD,KAAN;AACD","sourcesContent":["export function match<TValue extends string | number = string, TReturnValue = unknown>(\n  value: TValue,\n  lookup: Record<TValue, TReturnValue | ((...args: any[]) => TReturnValue)>,\n  ...args: any[]\n): TReturnValue {\n  if (value in lookup) {\n    let returnValue = lookup[value]\n    return typeof returnValue === 'function' ? returnValue(...args) : returnValue\n  }\n\n  let error = new Error(\n    `Tried to handle \"${value}\" but there is no handler defined. Only defined handlers are: ${Object.keys(\n      lookup\n    )\n      .map(key => `\"${key}\"`)\n      .join(', ')}.`\n  )\n  if (Error.captureStackTrace) Error.captureStackTrace(error, match)\n  throw error\n}\n"]},"metadata":{},"sourceType":"module"}