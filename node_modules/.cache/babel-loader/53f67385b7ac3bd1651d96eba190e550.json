{"ast":null,"code":"import { useState } from 'react';\nimport { useIsoMorphicEffect } from './use-iso-morphic-effect.esm.js';\nimport { useServerHandoffComplete } from './use-server-handoff-complete.esm.js';\n\n// didn't take care of the Suspense case. To fix this we used the approach the @reach-ui/auto-id\n// uses.\n//\n// Credits: https://github.com/reach/reach-ui/blob/develop/packages/auto-id/src/index.tsx\n\nvar id = 0;\nfunction generateId() {\n  return ++id;\n}\nfunction useId() {\n  var ready = useServerHandoffComplete();\n  var _useState = useState(ready ? generateId : null),\n    id = _useState[0],\n    setId = _useState[1];\n  useIsoMorphicEffect(function () {\n    if (id === null) setId(generateId());\n  }, [id]);\n  return id != null ? '' + id : undefined;\n}\nexport { useId };","map":{"version":3,"sources":["/Users/prince.kumar/Documents/Niyo-Dev/Games/travel-wordle/word-master/node_modules/@headlessui/react/src/hooks/use-id.ts"],"names":["id","generateId","useId","ready","useServerHandoffComplete","setId","useState","useIsoMorphicEffect","undefined"],"mappings":";;;;AAKA;AACA;AACA;AACA;;AAEA,IAAIA,EAAE,GAAG,CAAT;AACA,SAASC,UAAT,CAAA,EAAA;EACE,OAAO,EAAED,EAAT;AACD;SAEeE,KAAAA,CAAAA,EAAAA;EACd,IAAIC,KAAK,GAAGC,wBAAwB,CAAA,CAApC;kBACkBE,QAAQ,CAACH,KAAK,GAAGF,UAAH,GAAgB,IAAtB,CAAA;IAArBD,EAAAA,GAAAA,SAAAA,CAAAA,CAAAA,CAAAA;IAAIK,KAAAA,GAAAA,SAAAA,CAAAA,CAAAA,CAAAA;EAETE,mBAAmB,CAAC,YAAA;IAClB,IAAIP,EAAE,KAAK,IAAX,EAAiBK,KAAK,CAACJ,UAAU,CAAA,CAAX,CAALI;EAClB,CAFkB,EAEhB,CAACL,EAAD,CAFgB,CAAnBO;EAIA,OAAOP,EAAE,IAAI,IAANA,GAAa,EAAA,GAAKA,EAAlBA,GAAuBQ,SAA9B;AACD","sourcesContent":["import { useState } from 'react'\nimport { useIsoMorphicEffect } from './use-iso-morphic-effect'\nimport { useServerHandoffComplete } from './use-server-handoff-complete'\n\n// We used a \"simple\" approach first which worked for SSR and rehydration on the client. However we\n// didn't take care of the Suspense case. To fix this we used the approach the @reach-ui/auto-id\n// uses.\n//\n// Credits: https://github.com/reach/reach-ui/blob/develop/packages/auto-id/src/index.tsx\n\nlet id = 0\nfunction generateId() {\n  return ++id\n}\n\nexport function useId() {\n  let ready = useServerHandoffComplete()\n  let [id, setId] = useState(ready ? generateId : null)\n\n  useIsoMorphicEffect(() => {\n    if (id === null) setId(generateId())\n  }, [id])\n\n  return id != null ? '' + id : undefined\n}\n"]},"metadata":{},"sourceType":"module"}