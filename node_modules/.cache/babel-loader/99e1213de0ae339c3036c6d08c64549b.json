{"ast":null,"code":"import { extends as _extends, objectWithoutPropertiesLoose as _objectWithoutPropertiesLoose } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport React, { useReducer, useRef, useMemo, useCallback, createContext, useContext } from 'react';\nimport { match } from '../../utils/match.esm.js';\nimport { render } from '../../utils/render.esm.js';\nimport { Keys } from '../keyboard.esm.js';\nimport { useIsoMorphicEffect } from '../../hooks/use-iso-morphic-effect.esm.js';\nimport { useId } from '../../hooks/use-id.esm.js';\nimport { focusIn, FocusResult, Focus } from '../../utils/focus-management.esm.js';\nimport { useDescriptions, Description } from '../description/description.esm.js';\nimport { useTreeWalker } from '../../hooks/use-tree-walker.esm.js';\nimport { useFlags } from '../../hooks/use-flags.esm.js';\nimport { useLabels, Label } from '../label/label.esm.js';\nvar _reducers;\nvar ActionTypes;\n(function (ActionTypes) {\n  ActionTypes[ActionTypes[\"RegisterOption\"] = 0] = \"RegisterOption\";\n  ActionTypes[ActionTypes[\"UnregisterOption\"] = 1] = \"UnregisterOption\";\n})(ActionTypes || (ActionTypes = {}));\nvar reducers = (_reducers = {}, _reducers[ActionTypes.RegisterOption] = function (state, action) {\n  return _extends({}, state, {\n    options: [].concat(state.options, [{\n      id: action.id,\n      element: action.element,\n      propsRef: action.propsRef\n    }])\n  });\n}, _reducers[ActionTypes.UnregisterOption] = function (state, action) {\n  var options = state.options.slice();\n  var idx = state.options.findIndex(function (radio) {\n    return radio.id === action.id;\n  });\n  if (idx === -1) return state;\n  options.splice(idx, 1);\n  return _extends({}, state, {\n    options: options\n  });\n}, _reducers);\nvar RadioGroupContext = /*#__PURE__*/createContext(null);\nRadioGroupContext.displayName = 'RadioGroupContext';\nfunction useRadioGroupContext(component) {\n  var context = useContext(RadioGroupContext);\n  if (context === null) {\n    var err = new Error(\"<\" + component + \" /> is missing a parent <\" + RadioGroup.name + \" /> component.\");\n    if (Error.captureStackTrace) Error.captureStackTrace(err, useRadioGroupContext);\n    throw err;\n  }\n  return context;\n}\nfunction stateReducer(state, action) {\n  return match(action.type, reducers, state, action);\n} // ---\n\nvar DEFAULT_RADIO_GROUP_TAG = 'div';\nfunction RadioGroup(props) {\n  var value = props.value,\n    onChange = props.onChange,\n    _props$disabled = props.disabled,\n    disabled = _props$disabled === void 0 ? false : _props$disabled,\n    passThroughProps = _objectWithoutPropertiesLoose(props, [\"value\", \"onChange\", \"disabled\"]);\n  var _useReducer = useReducer(stateReducer, {\n      options: []\n    }),\n    options = _useReducer[0].options,\n    dispatch = _useReducer[1];\n  var _useLabels = useLabels(),\n    labelledby = _useLabels[0],\n    LabelProvider = _useLabels[1];\n  var _useDescriptions = useDescriptions(),\n    describedby = _useDescriptions[0],\n    DescriptionProvider = _useDescriptions[1];\n  var id = \"headlessui-radiogroup-\" + useId();\n  var radioGroupRef = useRef(null);\n  var firstOption = useMemo(function () {\n    return options.find(function (option) {\n      if (option.propsRef.current.disabled) return false;\n      return true;\n    });\n  }, [options]);\n  var containsCheckedOption = useMemo(function () {\n    return options.some(function (option) {\n      return option.propsRef.current.value === value;\n    });\n  }, [options, value]);\n  var triggerChange = useCallback(function (nextValue) {\n    var _options$find;\n    if (disabled) return false;\n    if (nextValue === value) return false;\n    var nextOption = (_options$find = options.find(function (option) {\n      return option.propsRef.current.value === nextValue;\n    })) == null ? void 0 : _options$find.propsRef.current;\n    if (nextOption == null ? void 0 : nextOption.disabled) return false;\n    onChange(nextValue);\n    return true;\n  }, [onChange, value, disabled, options]);\n  useTreeWalker({\n    container: radioGroupRef.current,\n    accept: function accept(node) {\n      if (node.getAttribute('role') === 'radio') return NodeFilter.FILTER_REJECT;\n      if (node.hasAttribute('role')) return NodeFilter.FILTER_SKIP;\n      return NodeFilter.FILTER_ACCEPT;\n    },\n    walk: function walk(node) {\n      node.setAttribute('role', 'none');\n    }\n  });\n  var handleKeyDown = useCallback(function (event) {\n    var container = radioGroupRef.current;\n    if (!container) return;\n    var all = options.filter(function (option) {\n      return option.propsRef.current.disabled === false;\n    }).map(function (radio) {\n      return radio.element.current;\n    });\n    switch (event.key) {\n      case Keys.ArrowLeft:\n      case Keys.ArrowUp:\n        {\n          event.preventDefault();\n          event.stopPropagation();\n          var result = focusIn(all, Focus.Previous | Focus.WrapAround);\n          if (result === FocusResult.Success) {\n            var activeOption = options.find(function (option) {\n              return option.element.current === document.activeElement;\n            });\n            if (activeOption) triggerChange(activeOption.propsRef.current.value);\n          }\n        }\n        break;\n      case Keys.ArrowRight:\n      case Keys.ArrowDown:\n        {\n          event.preventDefault();\n          event.stopPropagation();\n          var _result = focusIn(all, Focus.Next | Focus.WrapAround);\n          if (_result === FocusResult.Success) {\n            var _activeOption = options.find(function (option) {\n              return option.element.current === document.activeElement;\n            });\n            if (_activeOption) triggerChange(_activeOption.propsRef.current.value);\n          }\n        }\n        break;\n      case Keys.Space:\n        {\n          event.preventDefault();\n          event.stopPropagation();\n          var _activeOption2 = options.find(function (option) {\n            return option.element.current === document.activeElement;\n          });\n          if (_activeOption2) triggerChange(_activeOption2.propsRef.current.value);\n        }\n        break;\n    }\n  }, [radioGroupRef, options, triggerChange]);\n  var registerOption = useCallback(function (option) {\n    dispatch(_extends({\n      type: ActionTypes.RegisterOption\n    }, option));\n    return function () {\n      return dispatch({\n        type: ActionTypes.UnregisterOption,\n        id: option.id\n      });\n    };\n  }, [dispatch]);\n  var api = useMemo(function () {\n    return {\n      registerOption: registerOption,\n      firstOption: firstOption,\n      containsCheckedOption: containsCheckedOption,\n      change: triggerChange,\n      disabled: disabled,\n      value: value\n    };\n  }, [registerOption, firstOption, containsCheckedOption, triggerChange, disabled, value]);\n  var propsWeControl = {\n    ref: radioGroupRef,\n    id: id,\n    role: 'radiogroup',\n    'aria-labelledby': labelledby,\n    'aria-describedby': describedby,\n    onKeyDown: handleKeyDown\n  };\n  return React.createElement(DescriptionProvider, {\n    name: \"RadioGroup.Description\"\n  }, React.createElement(LabelProvider, {\n    name: \"RadioGroup.Label\"\n  }, React.createElement(RadioGroupContext.Provider, {\n    value: api\n  }, render({\n    props: _extends({}, passThroughProps, propsWeControl),\n    defaultTag: DEFAULT_RADIO_GROUP_TAG,\n    name: 'RadioGroup'\n  }))));\n} // ---\n\nvar OptionState;\n(function (OptionState) {\n  OptionState[OptionState[\"Empty\"] = 1] = \"Empty\";\n  OptionState[OptionState[\"Active\"] = 2] = \"Active\";\n})(OptionState || (OptionState = {}));\nvar DEFAULT_OPTION_TAG = 'div';\nfunction Option(props) {\n  var optionRef = useRef(null);\n  var id = \"headlessui-radiogroup-option-\" + useId();\n  var _useLabels2 = useLabels(),\n    labelledby = _useLabels2[0],\n    LabelProvider = _useLabels2[1];\n  var _useDescriptions2 = useDescriptions(),\n    describedby = _useDescriptions2[0],\n    DescriptionProvider = _useDescriptions2[1];\n  var _useFlags = useFlags(OptionState.Empty),\n    addFlag = _useFlags.addFlag,\n    removeFlag = _useFlags.removeFlag,\n    hasFlag = _useFlags.hasFlag;\n  var value = props.value,\n    _props$disabled2 = props.disabled,\n    disabled = _props$disabled2 === void 0 ? false : _props$disabled2,\n    passThroughProps = _objectWithoutPropertiesLoose(props, [\"value\", \"disabled\"]);\n  var propsRef = useRef({\n    value: value,\n    disabled: disabled\n  });\n  useIsoMorphicEffect(function () {\n    propsRef.current.value = value;\n  }, [value, propsRef]);\n  useIsoMorphicEffect(function () {\n    propsRef.current.disabled = disabled;\n  }, [disabled, propsRef]);\n  var _useRadioGroupContext = useRadioGroupContext([RadioGroup.name, Option.name].join('.')),\n    registerOption = _useRadioGroupContext.registerOption,\n    radioGroupDisabled = _useRadioGroupContext.disabled,\n    change = _useRadioGroupContext.change,\n    firstOption = _useRadioGroupContext.firstOption,\n    containsCheckedOption = _useRadioGroupContext.containsCheckedOption,\n    radioGroupValue = _useRadioGroupContext.value;\n  useIsoMorphicEffect(function () {\n    return registerOption({\n      id: id,\n      element: optionRef,\n      propsRef: propsRef\n    });\n  }, [id, registerOption, optionRef, props]);\n  var handleClick = useCallback(function () {\n    var _optionRef$current;\n    if (!change(value)) return;\n    addFlag(OptionState.Active);\n    (_optionRef$current = optionRef.current) == null ? void 0 : _optionRef$current.focus();\n  }, [addFlag, change, value]);\n  var handleFocus = useCallback(function () {\n    return addFlag(OptionState.Active);\n  }, [addFlag]);\n  var handleBlur = useCallback(function () {\n    return removeFlag(OptionState.Active);\n  }, [removeFlag]);\n  var isFirstOption = (firstOption == null ? void 0 : firstOption.id) === id;\n  var isDisabled = radioGroupDisabled || disabled;\n  var checked = radioGroupValue === value;\n  var propsWeControl = {\n    ref: optionRef,\n    id: id,\n    role: 'radio',\n    'aria-checked': checked ? 'true' : 'false',\n    'aria-labelledby': labelledby,\n    'aria-describedby': describedby,\n    'aria-disabled': isDisabled ? true : undefined,\n    tabIndex: function () {\n      if (isDisabled) return -1;\n      if (checked) return 0;\n      if (!containsCheckedOption && isFirstOption) return 0;\n      return -1;\n    }(),\n    onClick: isDisabled ? undefined : handleClick,\n    onFocus: isDisabled ? undefined : handleFocus,\n    onBlur: isDisabled ? undefined : handleBlur\n  };\n  var slot = useMemo(function () {\n    return {\n      checked: checked,\n      disabled: isDisabled,\n      active: hasFlag(OptionState.Active)\n    };\n  }, [checked, isDisabled, hasFlag]);\n  return React.createElement(DescriptionProvider, {\n    name: \"RadioGroup.Description\"\n  }, React.createElement(LabelProvider, {\n    name: \"RadioGroup.Label\"\n  }, render({\n    props: _extends({}, passThroughProps, propsWeControl),\n    slot: slot,\n    defaultTag: DEFAULT_OPTION_TAG,\n    name: 'RadioGroup.Option'\n  })));\n} // ---\n\nRadioGroup.Option = Option;\nRadioGroup.Label = Label;\nRadioGroup.Description = Description;\nexport { RadioGroup };","map":{"version":3,"sources":["/Users/prince.kumar/Documents/Niyo-Dev/Games/travel-wordle/truddle/node_modules/@headlessui/react/src/components/radio-group/radio-group.tsx"],"names":["ActionTypes","reducers","RegisterOption","state","action","options","id","element","propsRef","UnregisterOption","slice","idx","findIndex","radio","splice","RadioGroupContext","createContext","displayName","useRadioGroupContext","component","context","useContext","err","Error","RadioGroup","name","captureStackTrace","stateReducer","match","type","DEFAULT_RADIO_GROUP_TAG","props","value","onChange","disabled","passThroughProps","dispatch","useReducer","labelledby","LabelProvider","useLabels","describedby","DescriptionProvider","useDescriptions","useId","radioGroupRef","useRef","firstOption","useMemo","find","option","current","containsCheckedOption","some","triggerChange","useCallback","nextValue","nextOption","useTreeWalker","container","accept","node","getAttribute","NodeFilter","FILTER_REJECT","hasAttribute","FILTER_SKIP","FILTER_ACCEPT","walk","setAttribute","handleKeyDown","event","all","filter","map","key","Keys","ArrowLeft","ArrowUp","preventDefault","stopPropagation","result","focusIn","Focus","Previous","WrapAround","FocusResult","Success","activeOption","document","activeElement","ArrowRight","ArrowDown","Next","Space","registerOption","api","change","propsWeControl","ref","role","onKeyDown","Provider","render","defaultTag","OptionState","DEFAULT_OPTION_TAG","Option","optionRef","addFlag","removeFlag","hasFlag","useFlags","Empty","useIsoMorphicEffect","radioGroupDisabled","radioGroupValue","join","handleClick","Active","focus","handleFocus","handleBlur","isFirstOption","isDisabled","checked","undefined","tabIndex","onClick","onFocus","onBlur","slot","active","Label","Description"],"mappings":"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","sourcesContent":["import React, {\n  createContext,\n  useCallback,\n  useContext,\n  useMemo,\n  useReducer,\n  useRef,\n\n  // Types\n  ElementType,\n  MutableRefObject,\n  KeyboardEvent as ReactKeyboardEvent,\n  ContextType,\n} from 'react'\n\nimport { Props, Expand } from '../../types'\nimport { render } from '../../utils/render'\nimport { useId } from '../../hooks/use-id'\nimport { match } from '../../utils/match'\nimport { useIsoMorphicEffect } from '../../hooks/use-iso-morphic-effect'\nimport { Keys } from '../../components/keyboard'\nimport { focusIn, Focus, FocusResult } from '../../utils/focus-management'\nimport { useFlags } from '../../hooks/use-flags'\nimport { Label, useLabels } from '../../components/label/label'\nimport { Description, useDescriptions } from '../../components/description/description'\nimport { useTreeWalker } from '../../hooks/use-tree-walker'\n\ninterface Option {\n  id: string\n  element: MutableRefObject<HTMLElement | null>\n  propsRef: MutableRefObject<{ value: unknown; disabled: boolean }>\n}\n\ninterface StateDefinition {\n  options: Option[]\n}\n\nenum ActionTypes {\n  RegisterOption,\n  UnregisterOption,\n}\n\ntype Actions =\n  | Expand<{ type: ActionTypes.RegisterOption } & Option>\n  | { type: ActionTypes.UnregisterOption; id: Option['id'] }\n\nlet reducers: {\n  [P in ActionTypes]: (\n    state: StateDefinition,\n    action: Extract<Actions, { type: P }>\n  ) => StateDefinition\n} = {\n  [ActionTypes.RegisterOption](state, action) {\n    return {\n      ...state,\n      options: [\n        ...state.options,\n        { id: action.id, element: action.element, propsRef: action.propsRef },\n      ],\n    }\n  },\n  [ActionTypes.UnregisterOption](state, action) {\n    let options = state.options.slice()\n    let idx = state.options.findIndex(radio => radio.id === action.id)\n    if (idx === -1) return state\n    options.splice(idx, 1)\n    return { ...state, options }\n  },\n}\n\nlet RadioGroupContext = createContext<{\n  registerOption(option: Option): () => void\n  change(value: unknown): boolean\n  value: unknown\n  firstOption?: Option\n  containsCheckedOption: boolean\n  disabled: boolean\n} | null>(null)\nRadioGroupContext.displayName = 'RadioGroupContext'\n\nfunction useRadioGroupContext(component: string) {\n  let context = useContext(RadioGroupContext)\n  if (context === null) {\n    let err = new Error(`<${component} /> is missing a parent <${RadioGroup.name} /> component.`)\n    if (Error.captureStackTrace) Error.captureStackTrace(err, useRadioGroupContext)\n    throw err\n  }\n  return context\n}\n\nfunction stateReducer(state: StateDefinition, action: Actions) {\n  return match(action.type, reducers, state, action)\n}\n\n// ---\n\nlet DEFAULT_RADIO_GROUP_TAG = 'div' as const\ninterface RadioGroupRenderPropArg {}\ntype RadioGroupPropsWeControl = 'role' | 'aria-labelledby' | 'aria-describedby' | 'id'\n\nexport function RadioGroup<\n  TTag extends ElementType = typeof DEFAULT_RADIO_GROUP_TAG,\n  TType = string\n>(\n  props: Props<\n    TTag,\n    RadioGroupRenderPropArg,\n    RadioGroupPropsWeControl | 'value' | 'onChange' | 'disabled'\n  > & {\n    value: TType\n    onChange(value: TType): void\n    disabled?: boolean\n  }\n) {\n  let { value, onChange, disabled = false, ...passThroughProps } = props\n  let [{ options }, dispatch] = useReducer(stateReducer, {\n    options: [],\n  } as StateDefinition)\n  let [labelledby, LabelProvider] = useLabels()\n  let [describedby, DescriptionProvider] = useDescriptions()\n  let id = `headlessui-radiogroup-${useId()}`\n  let radioGroupRef = useRef<HTMLElement | null>(null)\n\n  let firstOption = useMemo(\n    () =>\n      options.find(option => {\n        if (option.propsRef.current.disabled) return false\n        return true\n      }),\n    [options]\n  )\n  let containsCheckedOption = useMemo(\n    () => options.some(option => option.propsRef.current.value === value),\n    [options, value]\n  )\n\n  let triggerChange = useCallback(\n    nextValue => {\n      if (disabled) return false\n      if (nextValue === value) return false\n      let nextOption = options.find(option => option.propsRef.current.value === nextValue)?.propsRef\n        .current\n      if (nextOption?.disabled) return false\n\n      onChange(nextValue)\n      return true\n    },\n    [onChange, value, disabled, options]\n  )\n\n  useTreeWalker({\n    container: radioGroupRef.current,\n    accept(node) {\n      if (node.getAttribute('role') === 'radio') return NodeFilter.FILTER_REJECT\n      if (node.hasAttribute('role')) return NodeFilter.FILTER_SKIP\n      return NodeFilter.FILTER_ACCEPT\n    },\n    walk(node) {\n      node.setAttribute('role', 'none')\n    },\n  })\n\n  let handleKeyDown = useCallback(\n    (event: ReactKeyboardEvent<HTMLButtonElement>) => {\n      let container = radioGroupRef.current\n      if (!container) return\n\n      let all = options\n        .filter(option => option.propsRef.current.disabled === false)\n        .map(radio => radio.element.current) as HTMLElement[]\n\n      switch (event.key) {\n        case Keys.ArrowLeft:\n        case Keys.ArrowUp:\n          {\n            event.preventDefault()\n            event.stopPropagation()\n\n            let result = focusIn(all, Focus.Previous | Focus.WrapAround)\n\n            if (result === FocusResult.Success) {\n              let activeOption = options.find(\n                option => option.element.current === document.activeElement\n              )\n              if (activeOption) triggerChange(activeOption.propsRef.current.value)\n            }\n          }\n          break\n\n        case Keys.ArrowRight:\n        case Keys.ArrowDown:\n          {\n            event.preventDefault()\n            event.stopPropagation()\n\n            let result = focusIn(all, Focus.Next | Focus.WrapAround)\n\n            if (result === FocusResult.Success) {\n              let activeOption = options.find(\n                option => option.element.current === document.activeElement\n              )\n              if (activeOption) triggerChange(activeOption.propsRef.current.value)\n            }\n          }\n          break\n\n        case Keys.Space:\n          {\n            event.preventDefault()\n            event.stopPropagation()\n\n            let activeOption = options.find(\n              option => option.element.current === document.activeElement\n            )\n            if (activeOption) triggerChange(activeOption.propsRef.current.value)\n          }\n          break\n      }\n    },\n    [radioGroupRef, options, triggerChange]\n  )\n\n  let registerOption = useCallback(\n    (option: Option) => {\n      dispatch({ type: ActionTypes.RegisterOption, ...option })\n      return () => dispatch({ type: ActionTypes.UnregisterOption, id: option.id })\n    },\n    [dispatch]\n  )\n\n  let api = useMemo<ContextType<typeof RadioGroupContext>>(\n    () => ({\n      registerOption,\n      firstOption,\n      containsCheckedOption,\n      change: triggerChange,\n      disabled,\n      value,\n    }),\n    [registerOption, firstOption, containsCheckedOption, triggerChange, disabled, value]\n  )\n\n  let propsWeControl = {\n    ref: radioGroupRef,\n    id,\n    role: 'radiogroup',\n    'aria-labelledby': labelledby,\n    'aria-describedby': describedby,\n    onKeyDown: handleKeyDown,\n  }\n\n  return (\n    <DescriptionProvider name=\"RadioGroup.Description\">\n      <LabelProvider name=\"RadioGroup.Label\">\n        <RadioGroupContext.Provider value={api}>\n          {render({\n            props: { ...passThroughProps, ...propsWeControl },\n            defaultTag: DEFAULT_RADIO_GROUP_TAG,\n            name: 'RadioGroup',\n          })}\n        </RadioGroupContext.Provider>\n      </LabelProvider>\n    </DescriptionProvider>\n  )\n}\n\n// ---\n\nenum OptionState {\n  Empty = 1 << 0,\n  Active = 1 << 1,\n}\n\nlet DEFAULT_OPTION_TAG = 'div' as const\ninterface OptionRenderPropArg {\n  checked: boolean\n  active: boolean\n  disabled: boolean\n}\ntype RadioPropsWeControl =\n  | 'aria-checked'\n  | 'id'\n  | 'onBlur'\n  | 'onClick'\n  | 'onFocus'\n  | 'ref'\n  | 'role'\n  | 'tabIndex'\n\nfunction Option<\n  TTag extends ElementType = typeof DEFAULT_OPTION_TAG,\n  // TODO: One day we will be able to infer this type from the generic in RadioGroup itself.\n  // But today is not that day..\n  TType = Parameters<typeof RadioGroup>[0]['value']\n>(\n  props: Props<TTag, OptionRenderPropArg, RadioPropsWeControl | 'value' | 'disabled'> & {\n    value: TType\n    disabled?: boolean\n  }\n) {\n  let optionRef = useRef<HTMLElement | null>(null)\n  let id = `headlessui-radiogroup-option-${useId()}`\n\n  let [labelledby, LabelProvider] = useLabels()\n  let [describedby, DescriptionProvider] = useDescriptions()\n  let { addFlag, removeFlag, hasFlag } = useFlags(OptionState.Empty)\n\n  let { value, disabled = false, ...passThroughProps } = props\n  let propsRef = useRef({ value, disabled })\n\n  useIsoMorphicEffect(() => {\n    propsRef.current.value = value\n  }, [value, propsRef])\n  useIsoMorphicEffect(() => {\n    propsRef.current.disabled = disabled\n  }, [disabled, propsRef])\n\n  let {\n    registerOption,\n    disabled: radioGroupDisabled,\n    change,\n    firstOption,\n    containsCheckedOption,\n    value: radioGroupValue,\n  } = useRadioGroupContext([RadioGroup.name, Option.name].join('.'))\n\n  useIsoMorphicEffect(() => registerOption({ id, element: optionRef, propsRef }), [\n    id,\n    registerOption,\n    optionRef,\n    props,\n  ])\n\n  let handleClick = useCallback(() => {\n    if (!change(value)) return\n\n    addFlag(OptionState.Active)\n    optionRef.current?.focus()\n  }, [addFlag, change, value])\n\n  let handleFocus = useCallback(() => addFlag(OptionState.Active), [addFlag])\n  let handleBlur = useCallback(() => removeFlag(OptionState.Active), [removeFlag])\n\n  let isFirstOption = firstOption?.id === id\n  let isDisabled = radioGroupDisabled || disabled\n\n  let checked = radioGroupValue === value\n  let propsWeControl = {\n    ref: optionRef,\n    id,\n    role: 'radio',\n    'aria-checked': checked ? 'true' : 'false',\n    'aria-labelledby': labelledby,\n    'aria-describedby': describedby,\n    'aria-disabled': isDisabled ? true : undefined,\n    tabIndex: (() => {\n      if (isDisabled) return -1\n      if (checked) return 0\n      if (!containsCheckedOption && isFirstOption) return 0\n      return -1\n    })(),\n    onClick: isDisabled ? undefined : handleClick,\n    onFocus: isDisabled ? undefined : handleFocus,\n    onBlur: isDisabled ? undefined : handleBlur,\n  }\n  let slot = useMemo<OptionRenderPropArg>(\n    () => ({ checked, disabled: isDisabled, active: hasFlag(OptionState.Active) }),\n    [checked, isDisabled, hasFlag]\n  )\n\n  return (\n    <DescriptionProvider name=\"RadioGroup.Description\">\n      <LabelProvider name=\"RadioGroup.Label\">\n        {render({\n          props: { ...passThroughProps, ...propsWeControl },\n          slot,\n          defaultTag: DEFAULT_OPTION_TAG,\n          name: 'RadioGroup.Option',\n        })}\n      </LabelProvider>\n    </DescriptionProvider>\n  )\n}\n\n// ---\n\nRadioGroup.Option = Option\nRadioGroup.Label = Label\nRadioGroup.Description = Description\n"]},"metadata":{},"sourceType":"module"}