{"ast":null,"code":"import { objectWithoutPropertiesLoose as _objectWithoutPropertiesLoose } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport React, { useState, useContext, useEffect, createContext, Fragment } from 'react';\nimport { render } from '../../utils/render.esm.js';\nimport { useIsoMorphicEffect } from '../../hooks/use-iso-morphic-effect.esm.js';\nimport { useServerHandoffComplete } from '../../hooks/use-server-handoff-complete.esm.js';\nimport { createPortal } from 'react-dom';\nimport { usePortalRoot } from '../../internal/portal-force-root.esm.js';\nfunction usePortalTarget() {\n  var forceInRoot = usePortalRoot();\n  var groupTarget = useContext(PortalGroupContext);\n  var _useState = useState(function () {\n      // Group context is used, but still null\n      if (!forceInRoot && groupTarget !== null) return null; // No group context is used, let's create a default portal root\n\n      if (typeof window === 'undefined') return null;\n      var existingRoot = document.getElementById('headlessui-portal-root');\n      if (existingRoot) return existingRoot;\n      var root = document.createElement('div');\n      root.setAttribute('id', 'headlessui-portal-root');\n      return document.body.appendChild(root);\n    }),\n    target = _useState[0],\n    setTarget = _useState[1];\n  useEffect(function () {\n    if (forceInRoot) return;\n    if (groupTarget === null) return;\n    setTarget(groupTarget.current);\n  }, [groupTarget, setTarget, forceInRoot]);\n  return target;\n} // ---\n\nvar DEFAULT_PORTAL_TAG = Fragment;\nfunction Portal(props) {\n  var passthroughProps = props;\n  var target = usePortalTarget();\n  var _useState2 = useState(function () {\n      return typeof window === 'undefined' ? null : document.createElement('div');\n    }),\n    element = _useState2[0];\n  var ready = useServerHandoffComplete();\n  useIsoMorphicEffect(function () {\n    if (!target) return;\n    if (!element) return;\n    target.appendChild(element);\n    return function () {\n      if (!target) return;\n      if (!element) return;\n      target.removeChild(element);\n      if (target.childNodes.length <= 0) {\n        var _target$parentElement;\n        (_target$parentElement = target.parentElement) == null ? void 0 : _target$parentElement.removeChild(target);\n      }\n    };\n  }, [target, element]);\n  if (!ready) return null;\n  return !target || !element ? null : createPortal(render({\n    props: passthroughProps,\n    defaultTag: DEFAULT_PORTAL_TAG,\n    name: 'Portal'\n  }), element);\n} // ---\n\nvar DEFAULT_GROUP_TAG = Fragment;\nvar PortalGroupContext = /*#__PURE__*/createContext(null);\nfunction Group(props) {\n  var target = props.target,\n    passthroughProps = _objectWithoutPropertiesLoose(props, [\"target\"]);\n  return React.createElement(PortalGroupContext.Provider, {\n    value: target\n  }, render({\n    props: passthroughProps,\n    defaultTag: DEFAULT_GROUP_TAG,\n    name: 'Popover.Group'\n  }));\n} // ---\n\nPortal.Group = Group;\nexport { Portal };","map":{"version":3,"sources":["/Users/prince.kumar/Documents/Niyo-Dev/Games/travel-wordle/truddle/node_modules/@headlessui/react/src/components/portal/portal.tsx"],"names":["usePortalTarget","forceInRoot","usePortalRoot","groupTarget","useContext","PortalGroupContext","target","setTarget","useState","window","existingRoot","document","getElementById","root","createElement","setAttribute","body","appendChild","useEffect","current","DEFAULT_PORTAL_TAG","Fragment","Portal","props","passthroughProps","element","ready","useServerHandoffComplete","useIsoMorphicEffect","removeChild","childNodes","length","parentElement","createPortal","render","defaultTag","name","DEFAULT_GROUP_TAG","createContext","Group","Provider","value"],"mappings":"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","sourcesContent":["import React, {\n  Fragment,\n  createContext,\n  useContext,\n  useEffect,\n  useState,\n\n  // Types\n  ElementType,\n  MutableRefObject,\n} from 'react'\nimport { createPortal } from 'react-dom'\n\nimport { Props } from '../../types'\nimport { render } from '../../utils/render'\nimport { useIsoMorphicEffect } from '../../hooks/use-iso-morphic-effect'\nimport { usePortalRoot } from '../../internal/portal-force-root'\nimport { useServerHandoffComplete } from '../../hooks/use-server-handoff-complete'\n\nfunction usePortalTarget(): HTMLElement | null {\n  let forceInRoot = usePortalRoot()\n  let groupTarget = useContext(PortalGroupContext)\n  let [target, setTarget] = useState(() => {\n    // Group context is used, but still null\n    if (!forceInRoot && groupTarget !== null) return null\n\n    // No group context is used, let's create a default portal root\n    if (typeof window === 'undefined') return null\n    let existingRoot = document.getElementById('headlessui-portal-root')\n    if (existingRoot) return existingRoot\n\n    let root = document.createElement('div')\n    root.setAttribute('id', 'headlessui-portal-root')\n    return document.body.appendChild(root)\n  })\n\n  useEffect(() => {\n    if (forceInRoot) return\n    if (groupTarget === null) return\n    setTarget(groupTarget.current)\n  }, [groupTarget, setTarget, forceInRoot])\n\n  return target\n}\n\n// ---\n\nlet DEFAULT_PORTAL_TAG = Fragment\ninterface PortalRenderPropArg {}\n\nexport function Portal<TTag extends ElementType = typeof DEFAULT_PORTAL_TAG>(\n  props: Props<TTag, PortalRenderPropArg>\n) {\n  let passthroughProps = props\n  let target = usePortalTarget()\n  let [element] = useState<HTMLDivElement | null>(() =>\n    typeof window === 'undefined' ? null : document.createElement('div')\n  )\n\n  let ready = useServerHandoffComplete()\n\n  useIsoMorphicEffect(() => {\n    if (!target) return\n    if (!element) return\n\n    target.appendChild(element)\n\n    return () => {\n      if (!target) return\n      if (!element) return\n\n      target.removeChild(element)\n\n      if (target.childNodes.length <= 0) {\n        target.parentElement?.removeChild(target)\n      }\n    }\n  }, [target, element])\n\n  if (!ready) return null\n\n  return !target || !element\n    ? null\n    : createPortal(\n        render({ props: passthroughProps, defaultTag: DEFAULT_PORTAL_TAG, name: 'Portal' }),\n        element\n      )\n}\n\n// ---\n\nlet DEFAULT_GROUP_TAG = Fragment\ninterface GroupRenderPropArg {}\n\nlet PortalGroupContext = createContext<MutableRefObject<HTMLElement | null> | null>(null)\n\nfunction Group<TTag extends ElementType = typeof DEFAULT_GROUP_TAG>(\n  props: Props<TTag, GroupRenderPropArg> & {\n    target: MutableRefObject<HTMLElement | null>\n  }\n) {\n  let { target, ...passthroughProps } = props\n\n  return (\n    <PortalGroupContext.Provider value={target}>\n      {render({\n        props: passthroughProps,\n        defaultTag: DEFAULT_GROUP_TAG,\n        name: 'Popover.Group',\n      })}\n    </PortalGroupContext.Provider>\n  )\n}\n\n// ---\n\nPortal.Group = Group\n"]},"metadata":{},"sourceType":"module"}