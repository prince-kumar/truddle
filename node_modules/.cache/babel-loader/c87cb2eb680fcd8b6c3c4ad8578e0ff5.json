{"ast":null,"code":"import { objectWithoutPropertiesLoose as _objectWithoutPropertiesLoose, extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport React, { useMemo, useCallback, createContext, useState, useContext } from 'react';\nimport { render } from '../../utils/render.esm.js';\nimport { useIsoMorphicEffect } from '../../hooks/use-iso-morphic-effect.esm.js';\nimport { useId } from '../../hooks/use-id.esm.js';\nvar LabelContext = /*#__PURE__*/createContext(null);\nfunction useLabelContext() {\n  var context = useContext(LabelContext);\n  if (context === null) {\n    var err = new Error('You used a <Label /> component, but it is not inside a relevant parent.');\n    if (Error.captureStackTrace) Error.captureStackTrace(err, useLabelContext);\n    throw err;\n  }\n  return context;\n}\nfunction useLabels() {\n  var _useState = useState([]),\n    labelIds = _useState[0],\n    setLabelIds = _useState[1];\n  return [\n  // The actual id's as string or undefined.\n  labelIds.length > 0 ? labelIds.join(' ') : undefined,\n  // The provider component\n  useMemo(function () {\n    return function LabelProvider(props) {\n      var register = useCallback(function (value) {\n        setLabelIds(function (existing) {\n          return [].concat(existing, [value]);\n        });\n        return function () {\n          return setLabelIds(function (existing) {\n            var clone = existing.slice();\n            var idx = clone.indexOf(value);\n            if (idx !== -1) clone.splice(idx, 1);\n            return clone;\n          });\n        };\n      }, []);\n      var contextBag = useMemo(function () {\n        return {\n          register: register,\n          slot: props.slot,\n          name: props.name,\n          props: props.props\n        };\n      }, [register, props.slot, props.name, props.props]);\n      return React.createElement(LabelContext.Provider, {\n        value: contextBag\n      }, props.children);\n    };\n  }, [setLabelIds])];\n} // ---\n\nvar DEFAULT_LABEL_TAG = 'label';\nfunction Label(props) {\n  var _props$passive = props.passive,\n    passive = _props$passive === void 0 ? false : _props$passive,\n    passThroughProps = _objectWithoutPropertiesLoose(props, [\"passive\"]);\n  var context = useLabelContext();\n  var id = \"headlessui-label-\" + useId();\n  useIsoMorphicEffect(function () {\n    return context.register(id);\n  }, [id, context.register]);\n  var propsWeControl = _extends({}, context.props, {\n    id: id\n  });\n  var allProps = _extends({}, passThroughProps, propsWeControl); // @ts-expect-error props are dynamic via context, some components will\n  //                  provide an onClick then we can delete it.\n\n  if (passive) delete allProps['onClick'];\n  return render({\n    props: allProps,\n    slot: context.slot || {},\n    defaultTag: DEFAULT_LABEL_TAG,\n    name: context.name || 'Label'\n  });\n}\nexport { Label, useLabels };","map":{"version":3,"sources":["/Users/prince.kumar/Documents/Niyo-Dev/Games/travel-wordle/truddle/node_modules/@headlessui/react/src/components/label/label.tsx"],"names":["LabelContext","createContext","useLabelContext","context","useContext","err","Error","captureStackTrace","useLabels","labelIds","setLabelIds","useState","length","join","undefined","useMemo","LabelProvider","props","register","useCallback","value","existing","clone","slice","idx","indexOf","splice","contextBag","slot","name","Provider","children","DEFAULT_LABEL_TAG","Label","passive","passThroughProps","id","useId","useIsoMorphicEffect","propsWeControl","allProps","render","defaultTag"],"mappings":"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","sourcesContent":["import React, {\n  createContext,\n  useCallback,\n  useContext,\n  useMemo,\n  useState,\n\n  // Types\n  ElementType,\n  ReactNode,\n} from 'react'\n\nimport { Props } from '../../types'\nimport { useId } from '../../hooks/use-id'\nimport { render } from '../../utils/render'\nimport { useIsoMorphicEffect } from '../../hooks/use-iso-morphic-effect'\n\n// ---\n\ninterface SharedData {\n  slot?: {}\n  name?: string\n  props?: {}\n}\n\nlet LabelContext = createContext<({ register(value: string): () => void } & SharedData) | null>(\n  null\n)\n\nfunction useLabelContext() {\n  let context = useContext(LabelContext)\n  if (context === null) {\n    let err = new Error('You used a <Label /> component, but it is not inside a relevant parent.')\n    if (Error.captureStackTrace) Error.captureStackTrace(err, useLabelContext)\n    throw err\n  }\n  return context\n}\n\ninterface LabelProviderProps extends SharedData {\n  children: ReactNode\n}\n\nexport function useLabels(): [string | undefined, (props: LabelProviderProps) => JSX.Element] {\n  let [labelIds, setLabelIds] = useState<string[]>([])\n\n  return [\n    // The actual id's as string or undefined.\n    labelIds.length > 0 ? labelIds.join(' ') : undefined,\n\n    // The provider component\n    useMemo(() => {\n      return function LabelProvider(props: LabelProviderProps) {\n        let register = useCallback((value: string) => {\n          setLabelIds(existing => [...existing, value])\n\n          return () =>\n            setLabelIds(existing => {\n              let clone = existing.slice()\n              let idx = clone.indexOf(value)\n              if (idx !== -1) clone.splice(idx, 1)\n              return clone\n            })\n        }, [])\n\n        let contextBag = useMemo(\n          () => ({ register, slot: props.slot, name: props.name, props: props.props }),\n          [register, props.slot, props.name, props.props]\n        )\n\n        return <LabelContext.Provider value={contextBag}>{props.children}</LabelContext.Provider>\n      }\n    }, [setLabelIds]),\n  ]\n}\n\n// ---\n\nlet DEFAULT_LABEL_TAG = 'label' as const\ninterface LabelRenderPropArg {}\ntype LabelPropsWeControl = 'id'\n\nexport function Label<TTag extends ElementType = typeof DEFAULT_LABEL_TAG>(\n  props: Props<TTag, LabelRenderPropArg, LabelPropsWeControl> & {\n    passive?: boolean\n  }\n) {\n  let { passive = false, ...passThroughProps } = props\n  let context = useLabelContext()\n  let id = `headlessui-label-${useId()}`\n\n  useIsoMorphicEffect(() => context.register(id), [id, context.register])\n\n  let propsWeControl = { ...context.props, id }\n\n  let allProps = { ...passThroughProps, ...propsWeControl }\n  // @ts-expect-error props are dynamic via context, some components will\n  //                  provide an onClick then we can delete it.\n  if (passive) delete allProps['onClick']\n\n  return render({\n    props: allProps,\n    slot: context.slot || {},\n    defaultTag: DEFAULT_LABEL_TAG,\n    name: context.name || 'Label',\n  })\n}\n"]},"metadata":{},"sourceType":"module"}